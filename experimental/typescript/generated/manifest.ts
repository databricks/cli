/**
 * Auto-generated manifest of all Databricks resource types
 *
 * DO NOT EDIT MANUALLY - Generated by src/codegen/generate.ts
 */

export interface ResourceTypeInfo {
  name: string;
  namespace: string;
  typeName: string;
}

export const RESOURCE_TYPES: readonly ResourceTypeInfo[] = [
  { name: "resources.App", namespace: "apps", typeName: "App" },
  { name: "resources.Cluster", namespace: "clusters", typeName: "Cluster" },
  { name: "resources.Dashboard", namespace: "dashboards", typeName: "Dashboard" },
  { name: "resources.Job", namespace: "jobs", typeName: "Job" },
  { name: "resources.MlflowExperiment", namespace: "mlflow_experiments", typeName: "MlflowExperiment" },
  { name: "resources.MlflowModel", namespace: "mlflow_models", typeName: "MlflowModel" },
  { name: "resources.ModelServingEndpoint", namespace: "model_serving_endpoints", typeName: "ModelServingEndpoint" },
  { name: "resources.Pipeline", namespace: "pipelines", typeName: "Pipeline" },
  { name: "resources.QualityMonitor", namespace: "quality_monitors", typeName: "QualityMonitor" },
  { name: "resources.RegisteredModel", namespace: "registered_models", typeName: "RegisteredModel" },
  { name: "resources.Schema", namespace: "schemas", typeName: "Schema" },
  { name: "resources.Volume", namespace: "volumes", typeName: "Volume" },
  { name: "resources.DatabaseInstance", namespace: "database_instances", typeName: "DatabaseInstance" },
  { name: "resources.DatabaseCatalog", namespace: "database_catalogs", typeName: "DatabaseCatalog" },
  { name: "resources.SqlWarehouse", namespace: "sql_warehouses", typeName: "SqlWarehouse" },
] as const;

export const RESOURCE_NAMESPACES = [
  "apps",
  "clusters",
  "dashboards",
  "jobs",
  "mlflow_experiments",
  "mlflow_models",
  "model_serving_endpoints",
  "pipelines",
  "quality_monitors",
  "registered_models",
  "schemas",
  "volumes",
  "database_instances",
  "database_catalogs",
  "sql_warehouses",
] as const;

export const RESOURCE_TYPE_NAMES = [
  "App",
  "Cluster",
  "Dashboard",
  "Job",
  "MlflowExperiment",
  "MlflowModel",
  "ModelServingEndpoint",
  "Pipeline",
  "QualityMonitor",
  "RegisteredModel",
  "Schema",
  "Volume",
  "DatabaseInstance",
  "DatabaseCatalog",
  "SqlWarehouse",
] as const;
