{{$with_classic := (ne .serverless "yes") -}}
{{$with_python := (eq .include_python "yes") -}}
{{$with_pydabs := (eq .enable_pydabs "yes") -}}
# This is a Databricks asset bundle definition for {{.project_name}}.
# See https://docs.databricks.com/dev-tools/bundles/index.html for documentation.
bundle:
  name: {{.project_name}}
  uuid: {{bundle_uuid}}
{{- if $with_pydabs }}

python:
  # Activate virtual environment before loading resources defined in Python.
  # If disabled, defaults to using the Python interpreter available in the current shell.
  venv_path: .venv
  # Functions called to load resources defined in Python. See resources/__init__.py
  resources:
    - "resources:load_resources"
{{- end }}

include:
  - resources/*.yml
  - resources/*/*.yml

{{- if $with_python}}

artifacts:
  python_artifact:
    type: whl
    build: uv build --wheel
{{- end}}

# Variable declarations. These variables are assigned in the dev/prod targets below.
variables:
  catalog:
    description: The catalog to use
  schema:
    description: The schema to use

{{- $dev_schema := "dev" }}
{{- $prod_schema := "prod" }}
{{- if (regexp "^yes").MatchString .personal_schemas}}
  {{- $dev_schema = "${workspace.current_user.short_name}"}}
{{- end}}

targets:
  dev:
    # The default target uses 'mode: development' to create a development copy.
    # - Deployed resources get prefixed with '[dev my_user_name]'
    # - Any job schedules and triggers are paused by default.
    # See also https://docs.databricks.com/dev-tools/bundles/deployment-modes.html.
    mode: development
    default: true
    workspace:
      host: {{workspace_host}}
    variables:
      catalog: {{.default_catalog}}
      schema: {{$dev_schema}}
  {{- if $with_classic}}
    presets:
      artifacts_dynamic_version: true
  {{- end}}
  prod:
    mode: production
    workspace:
      host: {{workspace_host}}
      # We explicitly deploy to /Workspace/Users/{{user_name}} to make sure we only have a single copy.
      root_path: /Workspace/Users/{{user_name}}/.bundle/${bundle.name}/${bundle.target}
    variables:
      catalog: {{.default_catalog}}
      schema: {{$prod_schema}}
    permissions:
      - {{if is_service_principal}}service_principal{{else}}user{{end}}_name: {{user_name}}
        level: CAN_MANAGE
