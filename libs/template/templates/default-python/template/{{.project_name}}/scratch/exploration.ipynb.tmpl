{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "%load_ext autoreload\n",
    "%autoreload 2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "application/vnd.databricks.v1+cell": {
     "cellMetadata": {
      "byteLimit": 2048000,
      "rowLimit": 10000
     },
     "inputWidgets": {},
     "nuid": "6bca260b-13d1-448f-8082-30b60a85c9ae",
     "showTitle": false,
     "title": ""
    }
   },
   "outputs": [],
   "source": [
    {{- if (eq .include_python "yes") }}
    "import sys\n",
    "sys.path.append('../src')\n",
    "from {{.project_name}} import main\n",
    "\n",
    {{- /* We can use the short form here without 'dbutils.text()' since the widgets are defined in the metadata below. */}}
    "catalog = dbutils.widgets.get('catalog')\n",
    "schema = dbutils.widgets.get('schema')\n",
    "spark.sql(f'USE {catalog}.{schema}')\n",
    "\n",
    "spark.sql('SELECT * FROM example').show(10)"
    {{- else}}
    "# Load default catalog and schema as widget and set their values as the default catalog / schema\n",
    "catalog = dbutils.widgets.get('catalog')\n",
    "schema = dbutils.widgets.get('schema')\n",
    "spark.sql(f'USE {catalog}.{schema}')\n",
    "\n",
    "spark.sql('SELECT * FROM example').show(10)"
   {{- end}}
   ]
  }
 ],
 "metadata": {
  "application/vnd.databricks.v1+notebook": {
   "dashboards": [],
   "language": "python",
   "notebookMetadata": {
    "pythonIndentUnit": 2
   },
   "notebookName": "exploration",
   "widgets": {
    "catalog": {
     "currentValue": "{{.default_catalog}}",
     "nuid": "c47e96d8-5751-4c8a-9d6b-5c6c7c3f1234",
     "typedWidgetInfo": {
      "autoCreated": false,
      "defaultValue": "{{.default_catalog}}",
      "label": null,
      "name": "catalog",
      "options": {
       "widgetDisplayType": "Text",
       "validationRegex": null
      },
      "parameterDataType": "String"
     },
     "widgetInfo": {
      "widgetType": "text",
      "defaultValue": "{{.default_catalog}}",
      "label": null,
      "name": "catalog",
      "options": {
       "widgetType": "text",
       "autoCreated": null,
       "validationRegex": null
      }
     }
    },
{{- $dev_schema := .shared_schema }}
{{- if (regexp "^yes").MatchString .personal_schemas}}
  {{- $dev_schema = "{{short_name}}"}}
{{- end}}
    "schema": {
     "currentValue": "{{$dev_schema}}",
     "nuid": "c47e96d8-5751-4c8a-9d6b-5c6c7c3f5678",
     "typedWidgetInfo": {
      "autoCreated": false,
      "defaultValue": "{{$dev_schema}}",
      "label": null,
      "name": "schema",
      "options": {
       "widgetDisplayType": "Text",
       "validationRegex": null
      },
      "parameterDataType": "String"
     },
     "widgetInfo": {
      "widgetType": "text",
      "defaultValue": "{{$dev_schema}}",
      "label": null,
      "name": "schema",
      "options": {
       "widgetType": "text",
       "autoCreated": null,
       "validationRegex": null
      }
     }
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "name": "python",
   "version": "3.11.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 0
}
