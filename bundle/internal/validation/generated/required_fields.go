package generated

// THIS FILE IS AUTOGENERATED.
// DO NOT EDIT THIS FILE DIRECTLY.

import (
	_ "github.com/databricks/cli/libs/dyn"
)

// RequiredFields maps [dyn.Pattern] to required fields they should have.
var RequiredFields = map[string][]string{
	"artifacts.*.files[*]": {"source"},

	"bundle": {"name"},

	"permissions[*]": {"level"},

	"resources.apps.*":                               {"source_code_path", "name"},
	"resources.apps.*.permissions[*]":                {"level"},
	"resources.apps.*.resources[*]":                  {"name"},
	"resources.apps.*.resources[*].job":              {"id", "permission"},
	"resources.apps.*.resources[*].secret":           {"key", "permission", "scope"},
	"resources.apps.*.resources[*].serving_endpoint": {"name", "permission"},
	"resources.apps.*.resources[*].sql_warehouse":    {"id", "permission"},
	"resources.apps.*.resources[*].uc_securable":     {"permission", "securable_full_name", "securable_type"},

	"resources.clusters.*.cluster_log_conf.dbfs":     {"destination"},
	"resources.clusters.*.cluster_log_conf.s3":       {"destination"},
	"resources.clusters.*.cluster_log_conf.volumes":  {"destination"},
	"resources.clusters.*.init_scripts[*].abfss":     {"destination"},
	"resources.clusters.*.init_scripts[*].dbfs":      {"destination"},
	"resources.clusters.*.init_scripts[*].file":      {"destination"},
	"resources.clusters.*.init_scripts[*].gcs":       {"destination"},
	"resources.clusters.*.init_scripts[*].s3":        {"destination"},
	"resources.clusters.*.init_scripts[*].volumes":   {"destination"},
	"resources.clusters.*.init_scripts[*].workspace": {"destination"},
	"resources.clusters.*.permissions[*]":            {"level"},
	"resources.clusters.*.workload_type":             {"clients"},

	"resources.dashboards.*.permissions[*]": {"level"},

	"resources.experiments.*.permissions[*]": {"level"},

	"resources.jobs.*.environments[*]":                                                          {"environment_key"},
	"resources.jobs.*.environments[*].spec":                                                     {"client"},
	"resources.jobs.*.git_source":                                                               {"git_provider", "git_url"},
	"resources.jobs.*.health.rules[*]":                                                          {"metric", "op", "value"},
	"resources.jobs.*.job_clusters[*]":                                                          {"job_cluster_key", "new_cluster"},
	"resources.jobs.*.job_clusters[*].new_cluster.cluster_log_conf.dbfs":                        {"destination"},
	"resources.jobs.*.job_clusters[*].new_cluster.cluster_log_conf.s3":                          {"destination"},
	"resources.jobs.*.job_clusters[*].new_cluster.cluster_log_conf.volumes":                     {"destination"},
	"resources.jobs.*.job_clusters[*].new_cluster.init_scripts[*].abfss":                        {"destination"},
	"resources.jobs.*.job_clusters[*].new_cluster.init_scripts[*].dbfs":                         {"destination"},
	"resources.jobs.*.job_clusters[*].new_cluster.init_scripts[*].file":                         {"destination"},
	"resources.jobs.*.job_clusters[*].new_cluster.init_scripts[*].gcs":                          {"destination"},
	"resources.jobs.*.job_clusters[*].new_cluster.init_scripts[*].s3":                           {"destination"},
	"resources.jobs.*.job_clusters[*].new_cluster.init_scripts[*].volumes":                      {"destination"},
	"resources.jobs.*.job_clusters[*].new_cluster.init_scripts[*].workspace":                    {"destination"},
	"resources.jobs.*.job_clusters[*].new_cluster.workload_type":                                {"clients"},
	"resources.jobs.*.parameters[*]":                                                            {"default", "name"},
	"resources.jobs.*.permissions[*]":                                                           {"level"},
	"resources.jobs.*.queue":                                                                    {"enabled"},
	"resources.jobs.*.schedule":                                                                 {"quartz_cron_expression", "timezone_id"},
	"resources.jobs.*.tasks[*]":                                                                 {"task_key"},
	"resources.jobs.*.tasks[*].clean_rooms_notebook_task":                                       {"clean_room_name", "notebook_name"},
	"resources.jobs.*.tasks[*].condition_task":                                                  {"left", "op", "right"},
	"resources.jobs.*.tasks[*].dbt_task":                                                        {"commands"},
	"resources.jobs.*.tasks[*].depends_on[*]":                                                   {"task_key"},
	"resources.jobs.*.tasks[*].for_each_task":                                                   {"inputs", "task"},
	"resources.jobs.*.tasks[*].gen_ai_compute_task":                                             {"dl_runtime_image"},
	"resources.jobs.*.tasks[*].gen_ai_compute_task.compute":                                     {"num_gpus"},
	"resources.jobs.*.tasks[*].health.rules[*]":                                                 {"metric", "op", "value"},
	"resources.jobs.*.tasks[*].libraries[*].cran":                                               {"package"},
	"resources.jobs.*.tasks[*].libraries[*].maven":                                              {"coordinates"},
	"resources.jobs.*.tasks[*].libraries[*].pypi":                                               {"package"},
	"resources.jobs.*.tasks[*].new_cluster.cluster_log_conf.dbfs":                               {"destination"},
	"resources.jobs.*.tasks[*].new_cluster.cluster_log_conf.s3":                                 {"destination"},
	"resources.jobs.*.tasks[*].new_cluster.cluster_log_conf.volumes":                            {"destination"},
	"resources.jobs.*.tasks[*].new_cluster.init_scripts[*].abfss":                               {"destination"},
	"resources.jobs.*.tasks[*].new_cluster.init_scripts[*].dbfs":                                {"destination"},
	"resources.jobs.*.tasks[*].new_cluster.init_scripts[*].file":                                {"destination"},
	"resources.jobs.*.tasks[*].new_cluster.init_scripts[*].gcs":                                 {"destination"},
	"resources.jobs.*.tasks[*].new_cluster.init_scripts[*].s3":                                  {"destination"},
	"resources.jobs.*.tasks[*].new_cluster.init_scripts[*].volumes":                             {"destination"},
	"resources.jobs.*.tasks[*].new_cluster.init_scripts[*].workspace":                           {"destination"},
	"resources.jobs.*.tasks[*].new_cluster.workload_type":                                       {"clients"},
	"resources.jobs.*.tasks[*].notebook_task":                                                   {"notebook_path"},
	"resources.jobs.*.tasks[*].pipeline_task":                                                   {"pipeline_id"},
	"resources.jobs.*.tasks[*].python_wheel_task":                                               {"entry_point", "package_name"},
	"resources.jobs.*.tasks[*].run_job_task":                                                    {"job_id"},
	"resources.jobs.*.tasks[*].spark_python_task":                                               {"python_file"},
	"resources.jobs.*.tasks[*].sql_task":                                                        {"warehouse_id"},
	"resources.jobs.*.tasks[*].sql_task.alert":                                                  {"alert_id"},
	"resources.jobs.*.tasks[*].sql_task.dashboard":                                              {"dashboard_id"},
	"resources.jobs.*.tasks[*].sql_task.file":                                                   {"path"},
	"resources.jobs.*.tasks[*].sql_task.query":                                                  {"query_id"},
	"resources.jobs.*.tasks[*].webhook_notifications.on_duration_warning_threshold_exceeded[*]": {"id"},
	"resources.jobs.*.tasks[*].webhook_notifications.on_failure[*]":                             {"id"},
	"resources.jobs.*.tasks[*].webhook_notifications.on_start[*]":                               {"id"},
	"resources.jobs.*.tasks[*].webhook_notifications.on_streaming_backlog_exceeded[*]":          {"id"},
	"resources.jobs.*.tasks[*].webhook_notifications.on_success[*]":                             {"id"},
	"resources.jobs.*.trigger.file_arrival":                                                     {"url"},
	"resources.jobs.*.trigger.periodic":                                                         {"interval", "unit"},
	"resources.jobs.*.webhook_notifications.on_duration_warning_threshold_exceeded[*]":          {"id"},
	"resources.jobs.*.webhook_notifications.on_failure[*]":                                      {"id"},
	"resources.jobs.*.webhook_notifications.on_start[*]":                                        {"id"},
	"resources.jobs.*.webhook_notifications.on_streaming_backlog_exceeded[*]":                   {"id"},
	"resources.jobs.*.webhook_notifications.on_success[*]":                                      {"id"},

	"resources.model_serving_endpoints.*":                                                                              {"name"},
	"resources.model_serving_endpoints.*.ai_gateway.fallback_config":                                                   {"enabled"},
	"resources.model_serving_endpoints.*.ai_gateway.rate_limits[*]":                                                    {"calls", "renewal_period"},
	"resources.model_serving_endpoints.*.config.served_entities[*].external_model":                                     {"name", "provider", "task"},
	"resources.model_serving_endpoints.*.config.served_entities[*].external_model.amazon_bedrock_config":               {"aws_region", "bedrock_provider"},
	"resources.model_serving_endpoints.*.config.served_entities[*].external_model.custom_provider_config":              {"custom_provider_url"},
	"resources.model_serving_endpoints.*.config.served_entities[*].external_model.custom_provider_config.api_key_auth": {"key"},
	"resources.model_serving_endpoints.*.config.served_entities[*].external_model.databricks_model_serving_config":     {"databricks_workspace_url"},
	"resources.model_serving_endpoints.*.config.served_entities[*].external_model.google_cloud_vertex_ai_config":       {"project_id", "region"},
	"resources.model_serving_endpoints.*.config.served_models[*]":                                                      {"model_name", "model_version", "scale_to_zero_enabled"},
	"resources.model_serving_endpoints.*.config.traffic_config.routes[*]":                                              {"served_model_name", "traffic_percentage"},
	"resources.model_serving_endpoints.*.permissions[*]":                                                               {"level"},
	"resources.model_serving_endpoints.*.rate_limits[*]":                                                               {"calls", "renewal_period"},
	"resources.model_serving_endpoints.*.tags[*]":                                                                      {"key"},

	"resources.models.*":                {"name"},
	"resources.models.*.permissions[*]": {"level"},

	"resources.pipelines.*.clusters[*].autoscale":                  {"max_workers", "min_workers"},
	"resources.pipelines.*.clusters[*].cluster_log_conf.dbfs":      {"destination"},
	"resources.pipelines.*.clusters[*].cluster_log_conf.s3":        {"destination"},
	"resources.pipelines.*.clusters[*].cluster_log_conf.volumes":   {"destination"},
	"resources.pipelines.*.clusters[*].init_scripts[*].abfss":      {"destination"},
	"resources.pipelines.*.clusters[*].init_scripts[*].dbfs":       {"destination"},
	"resources.pipelines.*.clusters[*].init_scripts[*].file":       {"destination"},
	"resources.pipelines.*.clusters[*].init_scripts[*].gcs":        {"destination"},
	"resources.pipelines.*.clusters[*].init_scripts[*].s3":         {"destination"},
	"resources.pipelines.*.clusters[*].init_scripts[*].volumes":    {"destination"},
	"resources.pipelines.*.clusters[*].init_scripts[*].workspace":  {"destination"},
	"resources.pipelines.*.gateway_definition":                     {"connection_name", "gateway_storage_catalog", "gateway_storage_schema"},
	"resources.pipelines.*.ingestion_definition.objects[*].report": {"destination_catalog", "destination_schema", "source_url"},
	"resources.pipelines.*.ingestion_definition.objects[*].schema": {"destination_catalog", "destination_schema", "source_schema"},
	"resources.pipelines.*.ingestion_definition.objects[*].table":  {"destination_catalog", "destination_schema", "source_table"},
	"resources.pipelines.*.libraries[*].maven":                     {"coordinates"},
	"resources.pipelines.*.permissions[*]":                         {"level"},
	"resources.pipelines.*.restart_window":                         {"start_hour"},

	"resources.quality_monitors.*":                   {"table_name", "assets_dir", "output_schema_name"},
	"resources.quality_monitors.*.custom_metrics[*]": {"definition", "input_columns", "name", "output_data_type", "type"},
	"resources.quality_monitors.*.inference_log":     {"granularities", "model_id_col", "prediction_col", "problem_type", "timestamp_col"},
	"resources.quality_monitors.*.schedule":          {"quartz_cron_expression", "timezone_id"},
	"resources.quality_monitors.*.time_series":       {"granularities", "timestamp_col"},

	"resources.registered_models.*":           {"catalog_name", "name", "schema_name"},
	"resources.registered_models.*.grants[*]": {"privileges", "principal"},

	"resources.schemas.*":           {"catalog_name", "name"},
	"resources.schemas.*.grants[*]": {"privileges", "principal"},

	"resources.secret_scopes.*":                   {"name"},
	"resources.secret_scopes.*.keyvault_metadata": {"dns_name", "resource_id"},
	"resources.secret_scopes.*.permissions[*]":    {"level"},

	"resources.volumes.*":           {"catalog_name", "name", "schema_name"},
	"resources.volumes.*.grants[*]": {"privileges", "principal"},

	"targets.*.artifacts.*.files[*]": {"source"},

	"targets.*.bundle": {"name"},

	"targets.*.permissions[*]": {"level"},

	"targets.*.resources.apps.*":                                                                                                 {"source_code_path", "name"},
	"targets.*.resources.apps.*.permissions[*]":                                                                                  {"level"},
	"targets.*.resources.apps.*.resources[*]":                                                                                    {"name"},
	"targets.*.resources.apps.*.resources[*].job":                                                                                {"id", "permission"},
	"targets.*.resources.apps.*.resources[*].secret":                                                                             {"key", "permission", "scope"},
	"targets.*.resources.apps.*.resources[*].serving_endpoint":                                                                   {"name", "permission"},
	"targets.*.resources.apps.*.resources[*].sql_warehouse":                                                                      {"id", "permission"},
	"targets.*.resources.apps.*.resources[*].uc_securable":                                                                       {"permission", "securable_full_name", "securable_type"},
	"targets.*.resources.clusters.*.cluster_log_conf.dbfs":                                                                       {"destination"},
	"targets.*.resources.clusters.*.cluster_log_conf.s3":                                                                         {"destination"},
	"targets.*.resources.clusters.*.cluster_log_conf.volumes":                                                                    {"destination"},
	"targets.*.resources.clusters.*.init_scripts[*].abfss":                                                                       {"destination"},
	"targets.*.resources.clusters.*.init_scripts[*].dbfs":                                                                        {"destination"},
	"targets.*.resources.clusters.*.init_scripts[*].file":                                                                        {"destination"},
	"targets.*.resources.clusters.*.init_scripts[*].gcs":                                                                         {"destination"},
	"targets.*.resources.clusters.*.init_scripts[*].s3":                                                                          {"destination"},
	"targets.*.resources.clusters.*.init_scripts[*].volumes":                                                                     {"destination"},
	"targets.*.resources.clusters.*.init_scripts[*].workspace":                                                                   {"destination"},
	"targets.*.resources.clusters.*.permissions[*]":                                                                              {"level"},
	"targets.*.resources.clusters.*.workload_type":                                                                               {"clients"},
	"targets.*.resources.dashboards.*.permissions[*]":                                                                            {"level"},
	"targets.*.resources.experiments.*.permissions[*]":                                                                           {"level"},
	"targets.*.resources.jobs.*.environments[*]":                                                                                 {"environment_key"},
	"targets.*.resources.jobs.*.environments[*].spec":                                                                            {"client"},
	"targets.*.resources.jobs.*.git_source":                                                                                      {"git_provider", "git_url"},
	"targets.*.resources.jobs.*.health.rules[*]":                                                                                 {"metric", "op", "value"},
	"targets.*.resources.jobs.*.job_clusters[*]":                                                                                 {"job_cluster_key", "new_cluster"},
	"targets.*.resources.jobs.*.job_clusters[*].new_cluster.cluster_log_conf.dbfs":                                               {"destination"},
	"targets.*.resources.jobs.*.job_clusters[*].new_cluster.cluster_log_conf.s3":                                                 {"destination"},
	"targets.*.resources.jobs.*.job_clusters[*].new_cluster.cluster_log_conf.volumes":                                            {"destination"},
	"targets.*.resources.jobs.*.job_clusters[*].new_cluster.init_scripts[*].abfss":                                               {"destination"},
	"targets.*.resources.jobs.*.job_clusters[*].new_cluster.init_scripts[*].dbfs":                                                {"destination"},
	"targets.*.resources.jobs.*.job_clusters[*].new_cluster.init_scripts[*].file":                                                {"destination"},
	"targets.*.resources.jobs.*.job_clusters[*].new_cluster.init_scripts[*].gcs":                                                 {"destination"},
	"targets.*.resources.jobs.*.job_clusters[*].new_cluster.init_scripts[*].s3":                                                  {"destination"},
	"targets.*.resources.jobs.*.job_clusters[*].new_cluster.init_scripts[*].volumes":                                             {"destination"},
	"targets.*.resources.jobs.*.job_clusters[*].new_cluster.init_scripts[*].workspace":                                           {"destination"},
	"targets.*.resources.jobs.*.job_clusters[*].new_cluster.workload_type":                                                       {"clients"},
	"targets.*.resources.jobs.*.parameters[*]":                                                                                   {"default", "name"},
	"targets.*.resources.jobs.*.permissions[*]":                                                                                  {"level"},
	"targets.*.resources.jobs.*.queue":                                                                                           {"enabled"},
	"targets.*.resources.jobs.*.schedule":                                                                                        {"quartz_cron_expression", "timezone_id"},
	"targets.*.resources.jobs.*.tasks[*]":                                                                                        {"task_key"},
	"targets.*.resources.jobs.*.tasks[*].clean_rooms_notebook_task":                                                              {"clean_room_name", "notebook_name"},
	"targets.*.resources.jobs.*.tasks[*].condition_task":                                                                         {"left", "op", "right"},
	"targets.*.resources.jobs.*.tasks[*].dbt_task":                                                                               {"commands"},
	"targets.*.resources.jobs.*.tasks[*].depends_on[*]":                                                                          {"task_key"},
	"targets.*.resources.jobs.*.tasks[*].for_each_task":                                                                          {"inputs", "task"},
	"targets.*.resources.jobs.*.tasks[*].gen_ai_compute_task":                                                                    {"dl_runtime_image"},
	"targets.*.resources.jobs.*.tasks[*].gen_ai_compute_task.compute":                                                            {"num_gpus"},
	"targets.*.resources.jobs.*.tasks[*].health.rules[*]":                                                                        {"metric", "op", "value"},
	"targets.*.resources.jobs.*.tasks[*].libraries[*].cran":                                                                      {"package"},
	"targets.*.resources.jobs.*.tasks[*].libraries[*].maven":                                                                     {"coordinates"},
	"targets.*.resources.jobs.*.tasks[*].libraries[*].pypi":                                                                      {"package"},
	"targets.*.resources.jobs.*.tasks[*].new_cluster.cluster_log_conf.dbfs":                                                      {"destination"},
	"targets.*.resources.jobs.*.tasks[*].new_cluster.cluster_log_conf.s3":                                                        {"destination"},
	"targets.*.resources.jobs.*.tasks[*].new_cluster.cluster_log_conf.volumes":                                                   {"destination"},
	"targets.*.resources.jobs.*.tasks[*].new_cluster.init_scripts[*].abfss":                                                      {"destination"},
	"targets.*.resources.jobs.*.tasks[*].new_cluster.init_scripts[*].dbfs":                                                       {"destination"},
	"targets.*.resources.jobs.*.tasks[*].new_cluster.init_scripts[*].file":                                                       {"destination"},
	"targets.*.resources.jobs.*.tasks[*].new_cluster.init_scripts[*].gcs":                                                        {"destination"},
	"targets.*.resources.jobs.*.tasks[*].new_cluster.init_scripts[*].s3":                                                         {"destination"},
	"targets.*.resources.jobs.*.tasks[*].new_cluster.init_scripts[*].volumes":                                                    {"destination"},
	"targets.*.resources.jobs.*.tasks[*].new_cluster.init_scripts[*].workspace":                                                  {"destination"},
	"targets.*.resources.jobs.*.tasks[*].new_cluster.workload_type":                                                              {"clients"},
	"targets.*.resources.jobs.*.tasks[*].notebook_task":                                                                          {"notebook_path"},
	"targets.*.resources.jobs.*.tasks[*].pipeline_task":                                                                          {"pipeline_id"},
	"targets.*.resources.jobs.*.tasks[*].python_wheel_task":                                                                      {"entry_point", "package_name"},
	"targets.*.resources.jobs.*.tasks[*].run_job_task":                                                                           {"job_id"},
	"targets.*.resources.jobs.*.tasks[*].spark_python_task":                                                                      {"python_file"},
	"targets.*.resources.jobs.*.tasks[*].sql_task":                                                                               {"warehouse_id"},
	"targets.*.resources.jobs.*.tasks[*].sql_task.alert":                                                                         {"alert_id"},
	"targets.*.resources.jobs.*.tasks[*].sql_task.dashboard":                                                                     {"dashboard_id"},
	"targets.*.resources.jobs.*.tasks[*].sql_task.file":                                                                          {"path"},
	"targets.*.resources.jobs.*.tasks[*].sql_task.query":                                                                         {"query_id"},
	"targets.*.resources.jobs.*.tasks[*].webhook_notifications.on_duration_warning_threshold_exceeded[*]":                        {"id"},
	"targets.*.resources.jobs.*.tasks[*].webhook_notifications.on_failure[*]":                                                    {"id"},
	"targets.*.resources.jobs.*.tasks[*].webhook_notifications.on_start[*]":                                                      {"id"},
	"targets.*.resources.jobs.*.tasks[*].webhook_notifications.on_streaming_backlog_exceeded[*]":                                 {"id"},
	"targets.*.resources.jobs.*.tasks[*].webhook_notifications.on_success[*]":                                                    {"id"},
	"targets.*.resources.jobs.*.trigger.file_arrival":                                                                            {"url"},
	"targets.*.resources.jobs.*.trigger.periodic":                                                                                {"interval", "unit"},
	"targets.*.resources.jobs.*.webhook_notifications.on_duration_warning_threshold_exceeded[*]":                                 {"id"},
	"targets.*.resources.jobs.*.webhook_notifications.on_failure[*]":                                                             {"id"},
	"targets.*.resources.jobs.*.webhook_notifications.on_start[*]":                                                               {"id"},
	"targets.*.resources.jobs.*.webhook_notifications.on_streaming_backlog_exceeded[*]":                                          {"id"},
	"targets.*.resources.jobs.*.webhook_notifications.on_success[*]":                                                             {"id"},
	"targets.*.resources.model_serving_endpoints.*":                                                                              {"name"},
	"targets.*.resources.model_serving_endpoints.*.ai_gateway.fallback_config":                                                   {"enabled"},
	"targets.*.resources.model_serving_endpoints.*.ai_gateway.rate_limits[*]":                                                    {"calls", "renewal_period"},
	"targets.*.resources.model_serving_endpoints.*.config.served_entities[*].external_model":                                     {"name", "provider", "task"},
	"targets.*.resources.model_serving_endpoints.*.config.served_entities[*].external_model.amazon_bedrock_config":               {"aws_region", "bedrock_provider"},
	"targets.*.resources.model_serving_endpoints.*.config.served_entities[*].external_model.custom_provider_config":              {"custom_provider_url"},
	"targets.*.resources.model_serving_endpoints.*.config.served_entities[*].external_model.custom_provider_config.api_key_auth": {"key"},
	"targets.*.resources.model_serving_endpoints.*.config.served_entities[*].external_model.databricks_model_serving_config":     {"databricks_workspace_url"},
	"targets.*.resources.model_serving_endpoints.*.config.served_entities[*].external_model.google_cloud_vertex_ai_config":       {"project_id", "region"},
	"targets.*.resources.model_serving_endpoints.*.config.served_models[*]":                                                      {"model_name", "model_version", "scale_to_zero_enabled"},
	"targets.*.resources.model_serving_endpoints.*.config.traffic_config.routes[*]":                                              {"served_model_name", "traffic_percentage"},
	"targets.*.resources.model_serving_endpoints.*.permissions[*]":                                                               {"level"},
	"targets.*.resources.model_serving_endpoints.*.rate_limits[*]":                                                               {"calls", "renewal_period"},
	"targets.*.resources.model_serving_endpoints.*.tags[*]":                                                                      {"key"},
	"targets.*.resources.models.*":                                                                                               {"name"},
	"targets.*.resources.models.*.permissions[*]":                                                                                {"level"},
	"targets.*.resources.pipelines.*.clusters[*].autoscale":                                                                      {"max_workers", "min_workers"},
	"targets.*.resources.pipelines.*.clusters[*].cluster_log_conf.dbfs":                                                          {"destination"},
	"targets.*.resources.pipelines.*.clusters[*].cluster_log_conf.s3":                                                            {"destination"},
	"targets.*.resources.pipelines.*.clusters[*].cluster_log_conf.volumes":                                                       {"destination"},
	"targets.*.resources.pipelines.*.clusters[*].init_scripts[*].abfss":                                                          {"destination"},
	"targets.*.resources.pipelines.*.clusters[*].init_scripts[*].dbfs":                                                           {"destination"},
	"targets.*.resources.pipelines.*.clusters[*].init_scripts[*].file":                                                           {"destination"},
	"targets.*.resources.pipelines.*.clusters[*].init_scripts[*].gcs":                                                            {"destination"},
	"targets.*.resources.pipelines.*.clusters[*].init_scripts[*].s3":                                                             {"destination"},
	"targets.*.resources.pipelines.*.clusters[*].init_scripts[*].volumes":                                                        {"destination"},
	"targets.*.resources.pipelines.*.clusters[*].init_scripts[*].workspace":                                                      {"destination"},
	"targets.*.resources.pipelines.*.gateway_definition":                                                                         {"connection_name", "gateway_storage_catalog", "gateway_storage_schema"},
	"targets.*.resources.pipelines.*.ingestion_definition.objects[*].report":                                                     {"destination_catalog", "destination_schema", "source_url"},
	"targets.*.resources.pipelines.*.ingestion_definition.objects[*].schema":                                                     {"destination_catalog", "destination_schema", "source_schema"},
	"targets.*.resources.pipelines.*.ingestion_definition.objects[*].table":                                                      {"destination_catalog", "destination_schema", "source_table"},
	"targets.*.resources.pipelines.*.libraries[*].maven":                                                                         {"coordinates"},
	"targets.*.resources.pipelines.*.permissions[*]":                                                                             {"level"},
	"targets.*.resources.pipelines.*.restart_window":                                                                             {"start_hour"},
	"targets.*.resources.quality_monitors.*":                                                                                     {"table_name", "assets_dir", "output_schema_name"},
	"targets.*.resources.quality_monitors.*.custom_metrics[*]":                                                                   {"definition", "input_columns", "name", "output_data_type", "type"},
	"targets.*.resources.quality_monitors.*.inference_log":                                                                       {"granularities", "model_id_col", "prediction_col", "problem_type", "timestamp_col"},
	"targets.*.resources.quality_monitors.*.schedule":                                                                            {"quartz_cron_expression", "timezone_id"},
	"targets.*.resources.quality_monitors.*.time_series":                                                                         {"granularities", "timestamp_col"},
	"targets.*.resources.registered_models.*":                                                                                    {"catalog_name", "name", "schema_name"},
	"targets.*.resources.registered_models.*.grants[*]":                                                                          {"privileges", "principal"},
	"targets.*.resources.schemas.*":                                                                                              {"catalog_name", "name"},
	"targets.*.resources.schemas.*.grants[*]":                                                                                    {"privileges", "principal"},
	"targets.*.resources.secret_scopes.*":                                                                                        {"name"},
	"targets.*.resources.secret_scopes.*.keyvault_metadata":                                                                      {"dns_name", "resource_id"},
	"targets.*.resources.secret_scopes.*.permissions[*]":                                                                         {"level"},
	"targets.*.resources.volumes.*":                                                                                              {"catalog_name", "name", "schema_name"},
	"targets.*.resources.volumes.*.grants[*]":                                                                                    {"privileges", "principal"},
}
