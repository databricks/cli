github.com/databricks/cli/bundle/config/resources.Cluster:
  "data_security_mode":
    "description": |-
      PLACEHOLDER
  "docker_image":
    "description": |-
      PLACEHOLDER
  "kind":
    "description": |-
      PLACEHOLDER
  "permissions":
    "description": |-
      PLACEHOLDER
  "runtime_engine":
    "description": |-
      PLACEHOLDER
  "workload_type":
    "description": |-
      PLACEHOLDER
github.com/databricks/cli/bundle/config/resources.Dashboard:
  "embed_credentials":
    "description": |-
      PLACEHOLDER
  "file_path":
    "description": |-
      PLACEHOLDER
  "permissions":
    "description": |-
      PLACEHOLDER
github.com/databricks/cli/bundle/config/resources.Job:
  "health":
    "description": |-
      PLACEHOLDER
  "permissions":
    "description": |-
      PLACEHOLDER
  "run_as":
    "description": |-
      PLACEHOLDER
github.com/databricks/cli/bundle/config/resources.MlflowExperiment:
  "permissions":
    "description": |-
      PLACEHOLDER
github.com/databricks/cli/bundle/config/resources.MlflowModel:
  "permissions":
    "description": |-
      PLACEHOLDER
github.com/databricks/cli/bundle/config/resources.ModelServingEndpoint:
  "permissions":
    "description": |-
      PLACEHOLDER
github.com/databricks/cli/bundle/config/resources.Pipeline:
  "permissions":
    "description": |-
      PLACEHOLDER
github.com/databricks/cli/bundle/config/resources.QualityMonitor:
  "table_name":
    "description": |-
      PLACEHOLDER
github.com/databricks/cli/bundle/config/resources.RegisteredModel:
  "grants":
    "description": |-
      PLACEHOLDER
github.com/databricks/cli/bundle/config/resources.Schema:
  "grants":
    "description": |-
      PLACEHOLDER
  "properties":
    "description": |-
      PLACEHOLDER
github.com/databricks/cli/bundle/config/resources.Volume:
  "_":
    "markdown_description": |-
      The volume resource type allows you to define and create Unity Catalog [volumes](https://docs.databricks.com/api/workspace/volumes/create) as part of a bundle. When deploying a bundle with a volume defined, note that:

      * A volume cannot be referenced in the `artifact_path` for the bundle until it exists in the workspace. Hence, if you want to use Databricks Asset Bundles to create the volume, you must first define the volume in the bundle, deploy it to create the volume, then reference it in the `artifact_path`` in subsequent deployments.

      * Volumes in the bundle are not prepended with the `dev_${workspace.current_user.short_name}` prefix when the deployment target has `mode: development`` configured. However, you can manually configure this prefix. See [_](/dev-tools/bundles/deployment-modes.md#custom-presets)

    "markdown_examples": |-
      The following example creates a Unity Catalog volume with the key `my_volume``:

      ```yaml
      resources:
        volumes:
          my_volume:
            catalog_name: main
            name: my_volume
            schema_name: my_schema
      ```
  "grants":
    "description": |-
      PLACEHOLDER
  "volume_type":
    "description": |-
      PLACEHOLDER
github.com/databricks/databricks-sdk-go/service/compute.AwsAttributes:
  "availability":
    "description": |-
      PLACEHOLDER
  "ebs_volume_type":
    "description": |-
      PLACEHOLDER
github.com/databricks/databricks-sdk-go/service/compute.AzureAttributes:
  "availability":
    "description": |-
      PLACEHOLDER
github.com/databricks/databricks-sdk-go/service/compute.ClusterSpec:
  "data_security_mode":
    "description": |-
      PLACEHOLDER
  "docker_image":
    "description": |-
      PLACEHOLDER
  "kind":
    "description": |-
      PLACEHOLDER
  "runtime_engine":
    "description": |-
      PLACEHOLDER
  "workload_type":
    "description": |-
      PLACEHOLDER
github.com/databricks/databricks-sdk-go/service/compute.DockerImage:
  "basic_auth":
    "description": |-
      PLACEHOLDER
github.com/databricks/databricks-sdk-go/service/compute.GcpAttributes:
  "availability":
    "description": |-
      PLACEHOLDER
github.com/databricks/databricks-sdk-go/service/jobs.GitSource:
  "git_snapshot":
    "description": |-
      PLACEHOLDER
github.com/databricks/databricks-sdk-go/service/jobs.JobEnvironment:
  "spec":
    "description": |-
      PLACEHOLDER
github.com/databricks/databricks-sdk-go/service/jobs.JobsHealthRule:
  "metric":
    "description": |-
      PLACEHOLDER
  "op":
    "description": |-
      PLACEHOLDER
github.com/databricks/databricks-sdk-go/service/jobs.JobsHealthRules:
  "rules":
    "description": |-
      PLACEHOLDER
github.com/databricks/databricks-sdk-go/service/jobs.RunJobTask:
  "python_named_params":
    "description": |-
      PLACEHOLDER
github.com/databricks/databricks-sdk-go/service/jobs.Task:
  "health":
    "description": |-
      PLACEHOLDER
github.com/databricks/databricks-sdk-go/service/jobs.TriggerSettings:
  "table_update":
    "description": |-
      PLACEHOLDER
github.com/databricks/databricks-sdk-go/service/jobs.Webhook:
  "id":
    "description": |-
      PLACEHOLDER
github.com/databricks/databricks-sdk-go/service/pipelines.CronTrigger:
  "quartz_cron_schedule":
    "description": |-
      PLACEHOLDER
  "timezone_id":
    "description": |-
      PLACEHOLDER
github.com/databricks/databricks-sdk-go/service/pipelines.PipelineTrigger:
  "cron":
    "description": |-
      PLACEHOLDER
  "manual":
    "description": |-
      PLACEHOLDER
