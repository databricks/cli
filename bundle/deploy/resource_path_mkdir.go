package deploy

import (
	"context"

	"github.com/databricks/cli/bundle"
	"github.com/databricks/cli/libs/diag"
)

func ResourcePathMkdir() bundle.Mutator {
	return &resourcePathMkdir{}
}

type resourcePathMkdir struct{}

func (m *resourcePathMkdir) Name() string {
	return "deploy:resource_path_mkdir"
}

func (m *resourcePathMkdir) Apply(ctx context.Context, b *bundle.Bundle) diag.Diagnostics {
	// // Only dashboards and alerts need ${workspace.resource_path} to exist.
	// //
	// // We'll defer to TF to create resource_path for for dashboards.
	// // ref: https://github.com/databricks/terraform-provider-databricks/blob/d84bc6f28d8aa0fd77d110a41f745970299142b1/dashboards/resource_dashboard.go#L83.
	// //
	// // For alerts we proactively create it here because the TF implementation
	// // is autogenerated and cannot be easily customized.
	// if len(b.Config.Resources.Alerts) == 0 {
	// 	return nil
	// }

	// w := b.WorkspaceClient()

	// // Optimisitcally create the resource path. If it already exists ignore the error.
	// err := w.Workspace.MkdirsByPath(ctx, b.Config.Workspace.ResourcePath)
	// var aerr *apierr.APIError
	// if errors.As(err, &aerr) && aerr.ErrorCode == "RESOURCE_ALREADY_EXISTS" {
	// 	return nil
	// }
	// return diag.FromErr(err)
	return nil
}
