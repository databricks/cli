tmpdir="./subdir"
pipelines="$tmpdir/pipelines"
mkdir -p $tmpdir

title "install pipelines cli"
trace $CLI install-pipelines-cli -d $tmpdir

title "deploy pipeline"
trace $CLI bundle deploy

print_requests() {
    jq --sort-keys 'select(.method != "GET" and (.path | contains("/pipelines")))' < out.requests.txt
    rm out.requests.txt
    read_state.py pipelines my_pipeline id name
}

trace print_requests

title "test error: --refresh-all and --refresh together"
errcode trace $pipelines run my_pipeline --refresh-all --refresh table1
trace print_requests

title "test error: --full-refresh-all and --full-refresh together"
errcode trace $pipelines run my_pipeline --full-refresh-all --full-refresh table1
trace print_requests

title "test error: --refresh-all and --full-refresh-all together"
errcode trace $pipelines run my_pipeline --refresh-all --full-refresh-all
trace print_requests

title "test error: --refresh and --full-refresh together"
errcode trace $pipelines run my_pipeline --refresh table1 --full-refresh table2
trace print_requests

title "test valid combination: --no-wait with --refresh-all"
trace $pipelines run my_pipeline --no-wait --refresh-all
trace print_requests

title "Fetch pipeline ID and verify remote state"
ppid=`read_id.py pipelines my_pipeline`
trace $CLI pipelines get $ppid
rm out.requests.txt

title "Destroy the pipeline and verify that it's removed from the state and from remote"
trace $CLI bundle destroy --auto-approve

trace print_requests
trace musterr $CLI pipelines get $ppid
rm out.requests.txt

rm -rf $tmpdir $pipelines
