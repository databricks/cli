
>>> $CLI system-schemas disable --help
Disable a system schema.
  
  Disables the system schema and removes it from the system catalog. The caller
  must be an account admin or a metastore admin.

  Arguments:
    METASTORE_ID: The metastore ID under which the system schema lives.
    SCHEMA_NAME: Full name of the system schema.

Usage:
  databricks system-schemas disable METASTORE_ID SCHEMA_NAME [flags]

Flags:
  -h, --help   help for disable

Global Flags:
      --debug            enable debug logging
  -o, --output type      output type: text or json (default text)
  -p, --profile string   ~/.databrickscfg profile
  -t, --target string    bundle target to use (if applicable)

>>> $CLI system-schemas enable --help
Enable a system schema.
  
  Enables the system schema and adds it to the system catalog. The caller must
  be an account admin or a metastore admin.

  Arguments:
    METASTORE_ID: The metastore ID under which the system schema lives.
    SCHEMA_NAME: Full name of the system schema.

Usage:
  databricks system-schemas enable METASTORE_ID SCHEMA_NAME [flags]

Flags:
  -h, --help   help for enable

Global Flags:
      --debug            enable debug logging
  -o, --output type      output type: text or json (default text)
  -p, --profile string   ~/.databrickscfg profile
  -t, --target string    bundle target to use (if applicable)

>>> $CLI system-schemas list --help
List system schemas.
  
  Gets an array of system schemas for a metastore. The caller must be an account
  admin or a metastore admin.

  Arguments:
    METASTORE_ID: The ID for the metastore in which the system schema resides.

Usage:
  databricks system-schemas list METASTORE_ID [flags]

Flags:
  -h, --help                help for list
      --max-results int     Maximum number of schemas to return.
      --page-token string   Opaque pagination token to go to next page based on previous query.

Global Flags:
      --debug            enable debug logging
  -o, --output type      output type: text or json (default text)
  -p, --profile string   ~/.databrickscfg profile
  -t, --target string    bundle target to use (if applicable)
