
>>> $CLI functions create --help
Create a function.
  
  **WARNING: This API is experimental and will change in future versions**
  
  Creates a new function
  
  The user must have the following permissions in order for the function to be
  created: - **USE_CATALOG** on the function's parent catalog - **USE_SCHEMA**
  and **CREATE_FUNCTION** on the function's parent schema

Usage:
  databricks functions create [flags]

Flags:
  -h, --help        help for create
      --json JSON   either inline JSON string or @path/to/file.json with request body (default JSON (0 bytes))

Global Flags:
      --debug            enable debug logging
  -o, --output type      output type: text or json (default text)
  -p, --profile string   ~/.databrickscfg profile
  -t, --target string    bundle target to use (if applicable)

>>> $CLI functions delete --help
Delete a function.
  
  Deletes the function that matches the supplied name. For the deletion to
  succeed, the user must satisfy one of the following conditions: - Is the owner
  of the function's parent catalog - Is the owner of the function's parent
  schema and have the **USE_CATALOG** privilege on its parent catalog - Is the
  owner of the function itself and have both the **USE_CATALOG** privilege on
  its parent catalog and the **USE_SCHEMA** privilege on its parent schema

  Arguments:
    NAME: The fully-qualified name of the function (of the form
      __catalog_name__.__schema_name__.__function__name__).

Usage:
  databricks functions delete NAME [flags]

Flags:
      --force   Force deletion even if the function is notempty.
  -h, --help    help for delete

Global Flags:
      --debug            enable debug logging
  -o, --output type      output type: text or json (default text)
  -p, --profile string   ~/.databrickscfg profile
  -t, --target string    bundle target to use (if applicable)

>>> $CLI functions get --help
Get a function.
  
  Gets a function from within a parent catalog and schema. For the fetch to
  succeed, the user must satisfy one of the following requirements: - Is a
  metastore admin - Is an owner of the function's parent catalog - Have the
  **USE_CATALOG** privilege on the function's parent catalog and be the owner of
  the function - Have the **USE_CATALOG** privilege on the function's parent
  catalog, the **USE_SCHEMA** privilege on the function's parent schema, and the
  **EXECUTE** privilege on the function itself

  Arguments:
    NAME: The fully-qualified name of the function (of the form
      __catalog_name__.__schema_name__.__function__name__).

Usage:
  databricks functions get NAME [flags]

Flags:
  -h, --help             help for get
      --include-browse   Whether to include functions in the response for which the principal can only access selective metadata for.

Global Flags:
      --debug            enable debug logging
  -o, --output type      output type: text or json (default text)
  -p, --profile string   ~/.databrickscfg profile
  -t, --target string    bundle target to use (if applicable)

>>> $CLI functions list --help
List functions.
  
  List functions within the specified parent catalog and schema. If the user is
  a metastore admin, all functions are returned in the output list. Otherwise,
  the user must have the **USE_CATALOG** privilege on the catalog and the
  **USE_SCHEMA** privilege on the schema, and the output list contains only
  functions for which either the user has the **EXECUTE** privilege or the user
  is the owner. There is no guarantee of a specific ordering of the elements in
  the array.

  Arguments:
    CATALOG_NAME: Name of parent catalog for functions of interest.
    SCHEMA_NAME: Parent schema of functions.

Usage:
  databricks functions list CATALOG_NAME SCHEMA_NAME [flags]

Flags:
  -h, --help                help for list
      --include-browse      Whether to include functions in the response for which the principal can only access selective metadata for.
      --max-results int     Maximum number of functions to return.
      --page-token string   Opaque pagination token to go to next page based on previous query.

Global Flags:
      --debug            enable debug logging
  -o, --output type      output type: text or json (default text)
  -p, --profile string   ~/.databrickscfg profile
  -t, --target string    bundle target to use (if applicable)

>>> $CLI functions update --help
Update a function.
  
  Updates the function that matches the supplied name. Only the owner of the
  function can be updated. If the user is not a metastore admin, the user must
  be a member of the group that is the new function owner. - Is a metastore
  admin - Is the owner of the function's parent catalog - Is the owner of the
  function's parent schema and has the **USE_CATALOG** privilege on its parent
  catalog - Is the owner of the function itself and has the **USE_CATALOG**
  privilege on its parent catalog as well as the **USE_SCHEMA** privilege on the
  function's parent schema.

  Arguments:
    NAME: The fully-qualified name of the function (of the form
      __catalog_name__.__schema_name__.__function__name__).

Usage:
  databricks functions update NAME [flags]

Flags:
  -h, --help           help for update
      --json JSON      either inline JSON string or @path/to/file.json with request body (default JSON (0 bytes))
      --owner string   Username of current owner of function.

Global Flags:
      --debug            enable debug logging
  -o, --output type      output type: text or json (default text)
  -p, --profile string   ~/.databrickscfg profile
  -t, --target string    bundle target to use (if applicable)
