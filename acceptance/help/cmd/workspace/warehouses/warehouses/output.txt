
>>> $CLI warehouses create --help
Create a warehouse.
  
  Creates a new SQL warehouse.

Usage:
  databricks warehouses create [flags]

Flags:
      --auto-stop-mins int                                   The amount of time in minutes that a SQL warehouse must be idle (i.e., no RUNNING queries) before it is automatically stopped.
      --cluster-size string                                  Size of the clusters allocated for this warehouse.
      --creator-name string                                  warehouse creator name.
      --enable-photon                                        Configures whether the warehouse should use Photon optimized clusters.
      --enable-serverless-compute                            Configures whether the warehouse should use serverless compute.
  -h, --help                                                 help for create
      --instance-profile-arn string                          Deprecated.
      --json JSON                                            either inline JSON string or @path/to/file.json with request body (default JSON (0 bytes))
      --max-num-clusters int                                 Maximum number of clusters that the autoscaler will create to handle concurrent queries.
      --min-num-clusters int                                 Minimum number of available clusters that will be maintained for this SQL warehouse.
      --name string                                          Logical name for the cluster.
      --no-wait                                              do not wait to reach RUNNING state
      --spot-instance-policy SpotInstancePolicy              Configurations whether the warehouse should use spot instances. Supported values: [COST_OPTIMIZED, POLICY_UNSPECIFIED, RELIABILITY_OPTIMIZED]
      --timeout duration                                     maximum amount of time to reach RUNNING state (default 20m0s)
      --warehouse-type CreateWarehouseRequestWarehouseType   Warehouse type: PRO or CLASSIC. Supported values: [CLASSIC, PRO, TYPE_UNSPECIFIED]

Global Flags:
      --debug            enable debug logging
  -o, --output type      output type: text or json (default text)
  -p, --profile string   ~/.databrickscfg profile
  -t, --target string    bundle target to use (if applicable)

>>> $CLI warehouses delete --help
Delete a warehouse.
  
  Deletes a SQL warehouse.

  Arguments:
    ID: Required. Id of the SQL warehouse.

Usage:
  databricks warehouses delete ID [flags]

Flags:
  -h, --help   help for delete

Global Flags:
      --debug            enable debug logging
  -o, --output type      output type: text or json (default text)
  -p, --profile string   ~/.databrickscfg profile
  -t, --target string    bundle target to use (if applicable)

>>> $CLI warehouses edit --help
Update a warehouse.
  
  Updates the configuration for a SQL warehouse.

  Arguments:
    ID: Required. Id of the warehouse to configure.

Usage:
  databricks warehouses edit ID [flags]

Flags:
      --auto-stop-mins int                                 The amount of time in minutes that a SQL warehouse must be idle (i.e., no RUNNING queries) before it is automatically stopped.
      --cluster-size string                                Size of the clusters allocated for this warehouse.
      --creator-name string                                warehouse creator name.
      --enable-photon                                      Configures whether the warehouse should use Photon optimized clusters.
      --enable-serverless-compute                          Configures whether the warehouse should use serverless compute.
  -h, --help                                               help for edit
      --instance-profile-arn string                        Deprecated.
      --json JSON                                          either inline JSON string or @path/to/file.json with request body (default JSON (0 bytes))
      --max-num-clusters int                               Maximum number of clusters that the autoscaler will create to handle concurrent queries.
      --min-num-clusters int                               Minimum number of available clusters that will be maintained for this SQL warehouse.
      --name string                                        Logical name for the cluster.
      --no-wait                                            do not wait to reach RUNNING state
      --spot-instance-policy SpotInstancePolicy            Configurations whether the warehouse should use spot instances. Supported values: [COST_OPTIMIZED, POLICY_UNSPECIFIED, RELIABILITY_OPTIMIZED]
      --timeout duration                                   maximum amount of time to reach RUNNING state (default 20m0s)
      --warehouse-type EditWarehouseRequestWarehouseType   Warehouse type: PRO or CLASSIC. Supported values: [CLASSIC, PRO, TYPE_UNSPECIFIED]

Global Flags:
      --debug            enable debug logging
  -o, --output type      output type: text or json (default text)
  -p, --profile string   ~/.databrickscfg profile
  -t, --target string    bundle target to use (if applicable)

>>> $CLI warehouses get --help
Get warehouse info.
  
  Gets the information for a single SQL warehouse.

  Arguments:
    ID: Required. Id of the SQL warehouse.

Usage:
  databricks warehouses get ID [flags]

Flags:
  -h, --help               help for get
      --no-wait            do not wait to reach RUNNING state
      --timeout duration   maximum amount of time to reach RUNNING state (default 20m0s)

Global Flags:
      --debug            enable debug logging
  -o, --output type      output type: text or json (default text)
  -p, --profile string   ~/.databrickscfg profile
  -t, --target string    bundle target to use (if applicable)

>>> $CLI warehouses get-permission-levels --help
Get SQL warehouse permission levels.
  
  Gets the permission levels that a user can have on an object.

  Arguments:
    WAREHOUSE_ID: The SQL warehouse for which to get or manage permissions.

Usage:
  databricks warehouses get-permission-levels WAREHOUSE_ID [flags]

Flags:
  -h, --help   help for get-permission-levels

Global Flags:
      --debug            enable debug logging
  -o, --output type      output type: text or json (default text)
  -p, --profile string   ~/.databrickscfg profile
  -t, --target string    bundle target to use (if applicable)

>>> $CLI warehouses get-permissions --help
Get SQL warehouse permissions.
  
  Gets the permissions of a SQL warehouse. SQL warehouses can inherit
  permissions from their root object.

  Arguments:
    WAREHOUSE_ID: The SQL warehouse for which to get or manage permissions.

Usage:
  databricks warehouses get-permissions WAREHOUSE_ID [flags]

Flags:
  -h, --help   help for get-permissions

Global Flags:
      --debug            enable debug logging
  -o, --output type      output type: text or json (default text)
  -p, --profile string   ~/.databrickscfg profile
  -t, --target string    bundle target to use (if applicable)

>>> $CLI warehouses get-workspace-warehouse-config --help
Get the workspace configuration.
  
  Gets the workspace level configuration that is shared by all SQL warehouses in
  a workspace.

Usage:
  databricks warehouses get-workspace-warehouse-config [flags]

Flags:
  -h, --help   help for get-workspace-warehouse-config

Global Flags:
      --debug            enable debug logging
  -o, --output type      output type: text or json (default text)
  -p, --profile string   ~/.databrickscfg profile
  -t, --target string    bundle target to use (if applicable)

>>> $CLI warehouses list --help
List warehouses.
  
  Lists all SQL warehouses that a user has manager permissions on.

Usage:
  databricks warehouses list [flags]

Flags:
  -h, --help                 help for list
      --run-as-user-id int   Service Principal which will be used to fetch the list of warehouses.

Global Flags:
      --debug            enable debug logging
  -o, --output type      output type: text or json (default text)
  -p, --profile string   ~/.databrickscfg profile
  -t, --target string    bundle target to use (if applicable)

>>> $CLI warehouses set-permissions --help
Set SQL warehouse permissions.
  
  Sets permissions on an object, replacing existing permissions if they exist.
  Deletes all direct permissions if none are specified. Objects can inherit
  permissions from their root object.

  Arguments:
    WAREHOUSE_ID: The SQL warehouse for which to get or manage permissions.

Usage:
  databricks warehouses set-permissions WAREHOUSE_ID [flags]

Flags:
  -h, --help        help for set-permissions
      --json JSON   either inline JSON string or @path/to/file.json with request body (default JSON (0 bytes))

Global Flags:
      --debug            enable debug logging
  -o, --output type      output type: text or json (default text)
  -p, --profile string   ~/.databrickscfg profile
  -t, --target string    bundle target to use (if applicable)

>>> $CLI warehouses set-workspace-warehouse-config --help
Set the workspace configuration.
  
  Sets the workspace level configuration that is shared by all SQL warehouses in
  a workspace.

Usage:
  databricks warehouses set-workspace-warehouse-config [flags]

Flags:
      --google-service-account string                                      GCP only: Google Service Account used to pass to cluster to access Google Cloud Storage.
  -h, --help                                                               help for set-workspace-warehouse-config
      --instance-profile-arn string                                        AWS Only: Instance profile used to pass IAM role to the cluster.
      --json JSON                                                          either inline JSON string or @path/to/file.json with request body (default JSON (0 bytes))
      --security-policy SetWorkspaceWarehouseConfigRequestSecurityPolicy   Security policy for warehouses. Supported values: [DATA_ACCESS_CONTROL, NONE, PASSTHROUGH]

Global Flags:
      --debug            enable debug logging
  -o, --output type      output type: text or json (default text)
  -p, --profile string   ~/.databrickscfg profile
  -t, --target string    bundle target to use (if applicable)

>>> $CLI warehouses start --help
Start a warehouse.
  
  Starts a SQL warehouse.

  Arguments:
    ID: Required. Id of the SQL warehouse.

Usage:
  databricks warehouses start ID [flags]

Flags:
  -h, --help               help for start
      --no-wait            do not wait to reach RUNNING state
      --timeout duration   maximum amount of time to reach RUNNING state (default 20m0s)

Global Flags:
      --debug            enable debug logging
  -o, --output type      output type: text or json (default text)
  -p, --profile string   ~/.databrickscfg profile
  -t, --target string    bundle target to use (if applicable)

>>> $CLI warehouses stop --help
Stop a warehouse.
  
  Stops a SQL warehouse.

  Arguments:
    ID: Required. Id of the SQL warehouse.

Usage:
  databricks warehouses stop ID [flags]

Flags:
  -h, --help               help for stop
      --no-wait            do not wait to reach STOPPED state
      --timeout duration   maximum amount of time to reach STOPPED state (default 20m0s)

Global Flags:
      --debug            enable debug logging
  -o, --output type      output type: text or json (default text)
  -p, --profile string   ~/.databrickscfg profile
  -t, --target string    bundle target to use (if applicable)

>>> $CLI warehouses update-permissions --help
Update SQL warehouse permissions.
  
  Updates the permissions on a SQL warehouse. SQL warehouses can inherit
  permissions from their root object.

  Arguments:
    WAREHOUSE_ID: The SQL warehouse for which to get or manage permissions.

Usage:
  databricks warehouses update-permissions WAREHOUSE_ID [flags]

Flags:
  -h, --help        help for update-permissions
      --json JSON   either inline JSON string or @path/to/file.json with request body (default JSON (0 bytes))

Global Flags:
      --debug            enable debug logging
  -o, --output type      output type: text or json (default text)
  -p, --profile string   ~/.databrickscfg profile
  -t, --target string    bundle target to use (if applicable)
