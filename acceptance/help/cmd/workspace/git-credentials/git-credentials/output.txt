
>>> $CLI git-credentials create --help
Create a credential entry.
  
  Creates a Git credential entry for the user. Only one Git credential per user
  is supported, so any attempts to create credentials if an entry already exists
  will fail. Use the PATCH endpoint to update existing credentials, or the
  DELETE endpoint to delete existing credentials.

  Arguments:
    GIT_PROVIDER: Git provider. This field is case-insensitive. The available Git providers
      are gitHub, bitbucketCloud, gitLab, azureDevOpsServices,
      gitHubEnterprise, bitbucketServer, gitLabEnterpriseEdition and
      awsCodeCommit.

Usage:
  databricks git-credentials create GIT_PROVIDER [flags]

Flags:
      --git-username string            The username or email provided with your Git provider account, depending on which provider you are using.
  -h, --help                           help for create
      --json JSON                      either inline JSON string or @path/to/file.json with request body (default JSON (0 bytes))
      --personal-access-token string   The personal access token used to authenticate to the corresponding Git provider.

Global Flags:
      --debug            enable debug logging
  -o, --output type      output type: text or json (default text)
  -p, --profile string   ~/.databrickscfg profile
  -t, --target string    bundle target to use (if applicable)

>>> $CLI git-credentials delete --help
Delete a credential.
  
  Deletes the specified Git credential.

  Arguments:
    CREDENTIAL_ID: The ID for the corresponding credential to access.

Usage:
  databricks git-credentials delete CREDENTIAL_ID [flags]

Flags:
  -h, --help   help for delete

Global Flags:
      --debug            enable debug logging
  -o, --output type      output type: text or json (default text)
  -p, --profile string   ~/.databrickscfg profile
  -t, --target string    bundle target to use (if applicable)

>>> $CLI git-credentials get --help
Get a credential entry.
  
  Gets the Git credential with the specified credential ID.

  Arguments:
    CREDENTIAL_ID: The ID for the corresponding credential to access.

Usage:
  databricks git-credentials get CREDENTIAL_ID [flags]

Flags:
  -h, --help   help for get

Global Flags:
      --debug            enable debug logging
  -o, --output type      output type: text or json (default text)
  -p, --profile string   ~/.databrickscfg profile
  -t, --target string    bundle target to use (if applicable)

>>> $CLI git-credentials list --help
Get Git credentials.
  
  Lists the calling user's Git credentials. One credential per user is
  supported.

Usage:
  databricks git-credentials list [flags]

Flags:
  -h, --help   help for list

Global Flags:
      --debug            enable debug logging
  -o, --output type      output type: text or json (default text)
  -p, --profile string   ~/.databrickscfg profile
  -t, --target string    bundle target to use (if applicable)

>>> $CLI git-credentials update --help
Update a credential.
  
  Updates the specified Git credential.

  Arguments:
    CREDENTIAL_ID: The ID for the corresponding credential to access.
    GIT_PROVIDER: Git provider. This field is case-insensitive. The available Git providers
      are gitHub, bitbucketCloud, gitLab, azureDevOpsServices,
      gitHubEnterprise, bitbucketServer, gitLabEnterpriseEdition and
      awsCodeCommit.

Usage:
  databricks git-credentials update CREDENTIAL_ID GIT_PROVIDER [flags]

Flags:
      --git-username string            The username or email provided with your Git provider account, depending on which provider you are using.
  -h, --help                           help for update
      --json JSON                      either inline JSON string or @path/to/file.json with request body (default JSON (0 bytes))
      --personal-access-token string   The personal access token used to authenticate to the corresponding Git provider.

Global Flags:
      --debug            enable debug logging
  -o, --output type      output type: text or json (default text)
  -p, --profile string   ~/.databrickscfg profile
  -t, --target string    bundle target to use (if applicable)
