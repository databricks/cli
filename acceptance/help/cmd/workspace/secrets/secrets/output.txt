
>>> $CLI secrets create-scope --help
Create a new secret scope.
  
  The scope name must consist of alphanumeric characters, dashes, underscores,
  and periods, and may not exceed 128 characters.

  Arguments:
    SCOPE: Scope name requested by the user. Scope names are unique.

Usage:
  databricks secrets create-scope SCOPE [flags]

Flags:
  -h, --help                                  help for create-scope
      --initial-manage-principal string       The principal that is initially granted MANAGE permission to the created scope.
      --json JSON                             either inline JSON string or @path/to/file.json with request body (default JSON (0 bytes))
      --scope-backend-type ScopeBackendType   The backend type the scope will be created with. Supported values: [AZURE_KEYVAULT, DATABRICKS]

Global Flags:
      --debug            enable debug logging
  -o, --output type      output type: text or json (default text)
  -p, --profile string   ~/.databrickscfg profile
  -t, --target string    bundle target to use (if applicable)

>>> $CLI secrets delete-acl --help
Delete an ACL.
  
  Deletes the given ACL on the given scope.
  
  Users must have the MANAGE permission to invoke this API. Throws
  RESOURCE_DOES_NOT_EXIST if no such secret scope, principal, or ACL exists.
  Throws PERMISSION_DENIED if the user does not have permission to make this
  API call.

  Arguments:
    SCOPE: The name of the scope to remove permissions from.
    PRINCIPAL: The principal to remove an existing ACL from.

Usage:
  databricks secrets delete-acl SCOPE PRINCIPAL [flags]

Flags:
  -h, --help        help for delete-acl
      --json JSON   either inline JSON string or @path/to/file.json with request body (default JSON (0 bytes))

Global Flags:
      --debug            enable debug logging
  -o, --output type      output type: text or json (default text)
  -p, --profile string   ~/.databrickscfg profile
  -t, --target string    bundle target to use (if applicable)

>>> $CLI secrets delete-scope --help
Delete a secret scope.
  
  Deletes a secret scope.
  
  Throws RESOURCE_DOES_NOT_EXIST if the scope does not exist. Throws
  PERMISSION_DENIED if the user does not have permission to make this API
  call.

  Arguments:
    SCOPE: Name of the scope to delete.

Usage:
  databricks secrets delete-scope SCOPE [flags]

Flags:
  -h, --help        help for delete-scope
      --json JSON   either inline JSON string or @path/to/file.json with request body (default JSON (0 bytes))

Global Flags:
      --debug            enable debug logging
  -o, --output type      output type: text or json (default text)
  -p, --profile string   ~/.databrickscfg profile
  -t, --target string    bundle target to use (if applicable)

>>> $CLI secrets delete-secret --help
Delete a secret.
  
  Deletes the secret stored in this secret scope. You must have WRITE or
  MANAGE permission on the secret scope.
  
  Throws RESOURCE_DOES_NOT_EXIST if no such secret scope or secret exists.
  Throws PERMISSION_DENIED if the user does not have permission to make this
  API call.

  Arguments:
    SCOPE: The name of the scope that contains the secret to delete.
    KEY: Name of the secret to delete.

Usage:
  databricks secrets delete-secret SCOPE KEY [flags]

Flags:
  -h, --help        help for delete-secret
      --json JSON   either inline JSON string or @path/to/file.json with request body (default JSON (0 bytes))

Global Flags:
      --debug            enable debug logging
  -o, --output type      output type: text or json (default text)
  -p, --profile string   ~/.databrickscfg profile
  -t, --target string    bundle target to use (if applicable)

>>> $CLI secrets get-acl --help
Get secret ACL details.
  
  Gets the details about the given ACL, such as the group and permission. Users
  must have the MANAGE permission to invoke this API.
  
  Throws RESOURCE_DOES_NOT_EXIST if no such secret scope exists. Throws
  PERMISSION_DENIED if the user does not have permission to make this API
  call.

  Arguments:
    SCOPE: The name of the scope to fetch ACL information from.
    PRINCIPAL: The principal to fetch ACL information for.

Usage:
  databricks secrets get-acl SCOPE PRINCIPAL [flags]

Flags:
  -h, --help   help for get-acl

Global Flags:
      --debug            enable debug logging
  -o, --output type      output type: text or json (default text)
  -p, --profile string   ~/.databrickscfg profile
  -t, --target string    bundle target to use (if applicable)

>>> $CLI secrets get-secret --help
Get a secret.
  
  Gets the bytes representation of a secret value for the specified scope and
  key.
  
  Users need the READ permission to make this call.
  
  Note that the secret value returned is in bytes. The interpretation of the
  bytes is determined by the caller in DBUtils and the type the data is decoded
  into.
  
  Throws PERMISSION_DENIED if the user does not have permission to make this
  API call. Throws RESOURCE_DOES_NOT_EXIST if no such secret or secret scope
  exists.

  Arguments:
    SCOPE: The name of the scope to fetch secret information from.
    KEY: The key to fetch secret for.

Usage:
  databricks secrets get-secret SCOPE KEY [flags]

Flags:
  -h, --help   help for get-secret

Global Flags:
      --debug            enable debug logging
  -o, --output type      output type: text or json (default text)
  -p, --profile string   ~/.databrickscfg profile
  -t, --target string    bundle target to use (if applicable)

>>> $CLI secrets list-acls --help
Lists ACLs.
  
  List the ACLs for a given secret scope. Users must have the MANAGE
  permission to invoke this API.
  
  Throws RESOURCE_DOES_NOT_EXIST if no such secret scope exists. Throws
  PERMISSION_DENIED if the user does not have permission to make this API
  call.

  Arguments:
    SCOPE: The name of the scope to fetch ACL information from.

Usage:
  databricks secrets list-acls SCOPE [flags]

Flags:
  -h, --help   help for list-acls

Global Flags:
      --debug            enable debug logging
  -o, --output type      output type: text or json (default text)
  -p, --profile string   ~/.databrickscfg profile
  -t, --target string    bundle target to use (if applicable)

>>> $CLI secrets list-scopes --help
List all scopes.
  
  Lists all secret scopes available in the workspace.
  
  Throws PERMISSION_DENIED if the user does not have permission to make this
  API call.

Usage:
  databricks secrets list-scopes [flags]

Flags:
  -h, --help   help for list-scopes

Global Flags:
      --debug            enable debug logging
  -o, --output type      output type: text or json (default text)
  -p, --profile string   ~/.databrickscfg profile
  -t, --target string    bundle target to use (if applicable)

>>> $CLI secrets list-secrets --help
List secret keys.
  
  Lists the secret keys that are stored at this scope. This is a metadata-only
  operation; secret data cannot be retrieved using this API. Users need the READ
  permission to make this call.
  
  The lastUpdatedTimestamp returned is in milliseconds since epoch. Throws
  RESOURCE_DOES_NOT_EXIST if no such secret scope exists. Throws
  PERMISSION_DENIED if the user does not have permission to make this API
  call.

  Arguments:
    SCOPE: The name of the scope to list secrets within.

Usage:
  databricks secrets list-secrets SCOPE [flags]

Flags:
  -h, --help   help for list-secrets

Global Flags:
      --debug            enable debug logging
  -o, --output type      output type: text or json (default text)
  -p, --profile string   ~/.databrickscfg profile
  -t, --target string    bundle target to use (if applicable)

>>> $CLI secrets put-acl --help
Create/update an ACL.
  
  Creates or overwrites the Access Control List (ACL) associated with the given
  principal (user or group) on the specified scope point.
  
  In general, a user or group will use the most powerful permission available to
  them, and permissions are ordered as follows:
  
  * MANAGE - Allowed to change ACLs, and read and write to this secret scope.
  * WRITE - Allowed to read and write to this secret scope. * READ - Allowed
  to read this secret scope and list what secrets are available.
  
  Note that in general, secret values can only be read from within a command on
  a cluster (for example, through a notebook). There is no API to read the
  actual secret value material outside of a cluster. However, the user's
  permission will be applied based on who is executing the command, and they
  must have at least READ permission.
  
  Users must have the MANAGE permission to invoke this API.
  
  The principal is a user or group name corresponding to an existing Databricks
  principal to be granted or revoked access.
  
  Throws RESOURCE_DOES_NOT_EXIST if no such secret scope exists. Throws
  RESOURCE_ALREADY_EXISTS if a permission for the principal already exists.
  Throws INVALID_PARAMETER_VALUE if the permission or principal is invalid.
  Throws PERMISSION_DENIED if the user does not have permission to make this
  API call.

  Arguments:
    SCOPE: The name of the scope to apply permissions to.
    PRINCIPAL: The principal in which the permission is applied.
    PERMISSION: The permission level applied to the principal.

Usage:
  databricks secrets put-acl SCOPE PRINCIPAL PERMISSION [flags]

Flags:
  -h, --help        help for put-acl
      --json JSON   either inline JSON string or @path/to/file.json with request body (default JSON (0 bytes))

Global Flags:
      --debug            enable debug logging
  -o, --output type      output type: text or json (default text)
  -p, --profile string   ~/.databrickscfg profile
  -t, --target string    bundle target to use (if applicable)

>>> $CLI secrets put-secret --help
Add a secret.

  Inserts a secret under the provided scope with the given name. If a secret
  already exists with the same name, this command overwrites the existing
  secret's value. The server encrypts the secret using the secret scope's
  encryption settings before storing it.

  You must have WRITE or MANAGE permission on the secret scope. The secret
  key must consist of alphanumeric characters, dashes, underscores, and periods,
  and cannot exceed 128 characters. The maximum allowed secret value size is 128
  KB. The maximum number of secrets in a given scope is 1000.

  The arguments "string-value" or "bytes-value" specify the type of the secret,
  which will determine the value returned when the secret value is requested.

  You can specify the secret value in one of three ways:
  * Specify the value as a string using the --string-value flag.
  * Input the secret when prompted interactively (single-line secrets).
  * Pass the secret via standard input (multi-line secrets).

Usage:
  databricks secrets put-secret SCOPE KEY [flags]

Flags:
      --bytes-value string    If specified, value will be stored as bytes.
  -h, --help                  help for put-secret
      --json JSON             either inline JSON string or @path/to/file.json with request body (default JSON (0 bytes))
      --string-value string   If specified, note that the value will be stored in UTF-8 (MB4) form.

Global Flags:
      --debug            enable debug logging
  -o, --output type      output type: text or json (default text)
  -p, --profile string   ~/.databrickscfg profile
  -t, --target string    bundle target to use (if applicable)
