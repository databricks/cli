
=== Create a pre-defined job:
Created job with ID: [NUMID]

>>> [CLI] workspace mkdirs /Workspace/Users/[USERNAME]/python-[UNIQUE_NAME]

>>> [CLI] workspace import /Workspace/Users/[USERNAME]/python-[UNIQUE_NAME]/test --file test.py --language PYTHON

=== Generate and bind in one step:
>>> [CLI] bundle generate job --key test_job --existing-job-id [NUMID] --config-dir resources --source-dir src --bind
File successfully saved to src/test.py
Job configuration successfully saved to resources/test_job.job.yml
Updating deployment state...
Successfully bound job with an id '[NUMID]'

>>> ls src/
test.py

>>> cat resources/test_job.job.yml
resources:
  jobs:
    test_job:
      name: auto-bind-job-[UNIQUE_NAME]
      tasks:
        - task_key: test
          new_cluster:
            azure_attributes:
              availability: ON_DEMAND_AZURE
            enable_elastic_disk: true
            node_type_id: [NODE_TYPE_ID]
            num_workers: 1
            spark_version: 13.3.x-snapshot-scala2.12
          email_notifications: {}
          notebook_task:
            notebook_path: ../src/test.py
            source: WORKSPACE
          run_if: ALL_SUCCESS
          timeout_seconds: 0
      email_notifications: {}
      max_concurrent_runs: 1
      queue:
        enabled: true
      timeout_seconds: 0
      webhook_notifications: {}

=== Deploy the bound job:
>>> [CLI] bundle deploy
Uploading bundle files to /Workspace/tmp/[UNIQUE_NAME]/files...
Deploying resources...
Updating deployment state...
Deployment complete!

=== Destroy the bundle:
>>> [CLI] bundle destroy --auto-approve
The following resources will be deleted:
  delete job test_job

All files and directories at the following location will be deleted: /Workspace/tmp/[UNIQUE_NAME]

Deleting files...
Destroy complete!

=== Check that job is bound and does not exist after bundle is destroyed:
>>> errcode [CLI] jobs get [NUMID] --output json
Error: Job [NUMID] does not exist.

Exit code: 1

=== Delete the tmp folder:
>>> [CLI] workspace delete /Workspace/Users/[USERNAME]/python-[UNIQUE_NAME]/test

>>> [CLI] workspace delete /Workspace/Users/[USERNAME]/python-[UNIQUE_NAME]
