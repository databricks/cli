print_requests() {
    jq --sort-keys 'select(.method != "GET" and (.path | contains("/jobs")))' < out.requests.txt
    rm out.requests.txt
}

print_sorted_requests() {
    jq -c < out.requests.txt | sort | jq --sort-keys 'select(.method != "GET" and (.path | contains("/jobs")))'
    rm out.requests.txt
}

echo "*" > .gitignore
$CLI bundle debug plan > out.plan_create.$DATABRICKS_BUNDLE_ENGINE.json
trace $CLI bundle deploy
trace print_requests

foo_id=`read_id.py jobs foo`
echo "$foo_id:FOO_ID" >> ACC_REPLS
export foo_id

bar_id=`read_id.py jobs bar`
echo "$bar_id:BAR_ID" >> ACC_REPLS

title "Update trigger.periodic.unit remotely and re-deploy; jobs.bar is unchanged"
trace envsubst < job_update.json > tmp.json && mv tmp.json job_update.json
trace $CLI jobs reset --json @job_update.json
$CLI bundle debug plan > out.plan_update.$DATABRICKS_BUNDLE_ENGINE.json

trace $CLI bundle destroy --auto-approve
# Sort, because the order of requests is different. TODO: remember deps in order to delete in reverse deployment order.
trace print_sorted_requests
