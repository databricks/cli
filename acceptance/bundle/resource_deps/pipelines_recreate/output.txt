
>>> [CLI] bundle plan
create jobs.bar
create pipelines.foo
Plan: 2 to add, 0 to change, 0 to delete, 0 unchanged

>>> [CLI] bundle deploy
Uploading bundle files to /Workspace/Users/[USERNAME]/.bundle/test-bundle/default/files...
Deploying resources...
Updating deployment state...
Deployment complete!

>>> print_requests
{
  "body": {
    "catalog": "mycatalog",
    "channel": "CURRENT",
    "deployment": {
      "kind": "BUNDLE",
      "metadata_file_path": "/Workspace/Users/[USERNAME]/.bundle/test-bundle/default/state/metadata.json"
    },
    "edition": "ADVANCED",
    "name": "pipeline foo"
  },
  "method": "POST",
  "path": "/api/2.0/pipelines"
}
{
  "body": {
    "deployment": {
      "kind": "BUNDLE",
      "metadata_file_path": "/Workspace/Users/[USERNAME]/.bundle/test-bundle/default/state/metadata.json"
    },
    "description": "depends on foo id [FOO_ID]",
    "edit_mode": "UI_LOCKED",
    "format": "MULTI_TASK",
    "max_concurrent_runs": 1,
    "name": "job bar",
    "queue": {
      "enabled": true
    }
  },
  "method": "POST",
  "path": "/api/2.2/jobs/create"
}

>>> [CLI] bundle plan
Plan: 0 to add, 0 to change, 0 to delete, 2 unchanged

=== Update catalog, triggering recreate for pipeline; this means updating downstream deps
>>> update_file.py databricks.yml mycatalog mynewcatalog

>>> [CLI] bundle plan
update jobs.bar
recreate pipelines.foo
Plan: 1 to add, 1 to change, 1 to delete, 0 unchanged

>>> [CLI] bundle deploy --auto-approve
Uploading bundle files to /Workspace/Users/[USERNAME]/.bundle/test-bundle/default/files...

This action will result in the deletion or recreation of the following Lakeflow Declarative Pipelines along with the
Streaming Tables (STs) and Materialized Views (MVs) managed by them. Recreating the pipelines will
restore the defined STs and MVs through full refresh. Note that recreation is necessary when pipeline
properties such as the 'catalog' or 'storage' are changed:
  recreate pipeline foo
Deploying resources...
Updating deployment state...
Deployment complete!

>>> print_requests
{
  "method": "DELETE",
  "path": "/api/2.0/pipelines/[FOO_ID]"
}
{
  "body": {
    "catalog": "mynewcatalog",
    "channel": "CURRENT",
    "deployment": {
      "kind": "BUNDLE",
      "metadata_file_path": "/Workspace/Users/[USERNAME]/.bundle/test-bundle/default/state/metadata.json"
    },
    "edition": "ADVANCED",
    "name": "pipeline foo"
  },
  "method": "POST",
  "path": "/api/2.0/pipelines"
}
{
  "body": {
    "job_id": [BAR_ID],
    "new_settings": {
      "deployment": {
        "kind": "BUNDLE",
        "metadata_file_path": "/Workspace/Users/[USERNAME]/.bundle/test-bundle/default/state/metadata.json"
      },
      "description": "depends on foo id [UUID]",
      "edit_mode": "UI_LOCKED",
      "format": "MULTI_TASK",
      "max_concurrent_runs": 1,
      "name": "job bar",
      "queue": {
        "enabled": true
      }
    }
  },
  "method": "POST",
  "path": "/api/2.2/jobs/reset"
}

=== Fetch resource IDs and verify remote state
>>> musterr [CLI] pipelines get [FOO_ID]
Error: The specified pipeline [FOO_ID] was not found.

Exit code (musterr): 1

>>> [CLI] pipelines get [UUID]
{
  "creator_user_name":"[USERNAME]",
  "last_modified":[UNIX_TIME_MILLIS],
  "name":"pipeline foo",
  "pipeline_id":"[UUID]",
  "run_as_user_name":"[USERNAME]",
  "spec": {
    "catalog":"mynewcatalog",
    "channel":"CURRENT",
    "deployment": {
      "kind":"BUNDLE",
      "metadata_file_path":"/Workspace/Users/[USERNAME]/.bundle/test-bundle/default/state/metadata.json"
    },
    "edition":"ADVANCED",
    "id":"[UUID]",
    "name":"pipeline foo"
  },
  "state":"IDLE"
}

>>> [CLI] jobs get [BAR_ID]
{
  "job_id":[BAR_ID],
  "settings": {
    "deployment": {
      "kind":"BUNDLE",
      "metadata_file_path":"/Workspace/Users/[USERNAME]/.bundle/test-bundle/default/state/metadata.json"
    },
    "description":"depends on foo id [UUID]",
    "edit_mode":"UI_LOCKED",
    "format":"MULTI_TASK",
    "max_concurrent_runs":1,
    "name":"job bar",
    "queue": {
      "enabled":true
    }
  }
}

=== Follow up plan & deploy do nothing
>>> [CLI] bundle plan
Plan: 0 to add, 0 to change, 0 to delete, 2 unchanged

>>> [CLI] bundle deploy
Uploading bundle files to /Workspace/Users/[USERNAME]/.bundle/test-bundle/default/files...
Deploying resources...
Updating deployment state...
Deployment complete!

>>> print_requests

>>> [CLI] bundle destroy --auto-approve
The following resources will be deleted:
  delete job bar
  delete pipeline foo

This action will result in the deletion of the following Lakeflow Declarative Pipelines along with the
Streaming Tables (STs) and Materialized Views (MVs) managed by them:
  delete pipeline foo

All files and directories at the following location will be deleted: /Workspace/Users/[USERNAME]/.bundle/test-bundle/default

Deleting files...
Destroy complete!

>>> print_sorted_requests
{
  "method": "DELETE",
  "path": "/api/2.0/pipelines/[UUID]"
}
{
  "body": {
    "job_id": [BAR_ID]
  },
  "method": "POST",
  "path": "/api/2.2/jobs/delete"
}

>>> musterr [CLI] pipelines get [FOO_ID]
Error: The specified pipeline [FOO_ID] was not found.

Exit code (musterr): 1

>>> musterr [CLI] pipelines get [UUID]
Error: The specified pipeline [UUID] was not found.

Exit code (musterr): 1

>>> musterr [CLI] jobs get [BAR_ID]
Error: Not Found

Exit code (musterr): 1
