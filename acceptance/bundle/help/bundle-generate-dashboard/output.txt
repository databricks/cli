
>>> [CLI] bundle generate dashboard --help
Generate bundle configuration for an existing Databricks dashboard.

This command downloads an existing AI/BI dashboard and creates bundle files
that you can use to deploy the dashboard to other environments or manage it as code.

EXAMPLES:
  # Import dashboard by workspace path
  databricks bundle generate dashboard --existing-path /Users/me/sales-dashboard \
    --key sales_dash

  # Import dashboard by ID
  databricks bundle generate dashboard --existing-id abc123 --key analytics_dashboard

  # Watch for changes to keep bundle in sync with UI modifications
  databricks bundle generate dashboard --resource my_dashboard --watch --force

WHAT GETS GENERATED:
- Dashboard configuration YAML file with settings and a reference to the dashboard definition
- Dashboard definition (.lvdash.json) file with layout and queries

SYNC WORKFLOW FOR DASHBOARD DEVELOPMENT:
When developing dashboards, you can modify them in the Databricks UI and sync
changes back to your bundle:

1. Make changes to dashboard in the Databricks UI
2. Run: databricks bundle generate dashboard --resource my_dashboard --force
3. Commit changes to version control
4. Deploy to other environments with: databricks bundle deploy --target prod

The --watch flag continuously polls for remote changes and updates your local
bundle files automatically, useful during active dashboard development.

Usage:
  databricks bundle generate dashboard [flags]

Flags:
  -s, --dashboard-dir string   directory to write the dashboard representation to (default "src")
      --existing-id string     ID of the dashboard to generate configuration for
      --existing-path string   workspace path of the dashboard to generate configuration for
  -f, --force                  force overwrite existing files in the output directory
  -h, --help                   help for dashboard
      --resource string        resource key of dashboard to watch for changes
  -d, --resource-dir string    directory to write the configuration to (default "resources")
      --watch                  watch for changes to the dashboard and update the configuration

Global Flags:
      --debug            enable debug logging
      --key string       resource key to use for the generated configuration
  -o, --output type      output type: text or json (default text)
  -p, --profile string   ~/.databrickscfg profile
  -t, --target string    bundle target to use (if applicable)
      --var strings      set values for variables defined in bundle config. Example: --var="foo=bar"
