
>>> export MODEL_NAME=original-name-[UNIQUE_NAME]

>>> export MODEL_DESCRIPTION=original-description-[UNIQUE_NAME]

=== create a model
>>> [CLI] bundle plan
create models.my_model

Plan: 1 to add, 0 to change, 0 to delete, 0 unchanged

>>> [CLI] bundle deploy
Uploading bundle files to /Workspace/Users/[USERNAME]/.bundle/deploy-models-basic-[UNIQUE_NAME]/default/files...
Deploying resources...
Updating deployment state...
Deployment complete!

>>> [CLI] model-registry get-model original-name-[UNIQUE_NAME]
{
  "name": "original-name-[UNIQUE_NAME]",
  "description": "original-description-[UNIQUE_NAME]",
  "tags": [
    {
      "key": "key1",
      "value": "value1"
    }
  ]
}

>>> export MODEL_DESCRIPTION=new-description-[UNIQUE_NAME]

=== update the description, this should update the description remotely as well
>>> [CLI] bundle plan
update models.my_model

Plan: 0 to add, 1 to change, 0 to delete, 0 unchanged

>>> [CLI] bundle deploy
Uploading bundle files to /Workspace/Users/[USERNAME]/.bundle/deploy-models-basic-[UNIQUE_NAME]/default/files...
Deploying resources...
Updating deployment state...
Deployment complete!

>>> [CLI] model-registry get-model original-name-[UNIQUE_NAME]
{
  "name": "original-name-[UNIQUE_NAME]",
  "description": "new-description-[UNIQUE_NAME]",
  "tags": [
    {
      "key": "key1",
      "value": "value1"
    }
  ]
}

>>> export MODEL_NAME=new-name-[UNIQUE_NAME]

=== update the name, this should recreate the model with the new name
>>> [CLI] bundle plan
recreate models.my_model

Plan: 1 to add, 0 to change, 1 to delete, 0 unchanged

>>> [CLI] bundle deploy
Uploading bundle files to /Workspace/Users/[USERNAME]/.bundle/deploy-models-basic-[UNIQUE_NAME]/default/files...
Deploying resources...
Updating deployment state...
Deployment complete!

>>> [CLI] model-registry get-model new-name-[UNIQUE_NAME]
{
  "name": "new-name-[UNIQUE_NAME]",
  "description": "new-description-[UNIQUE_NAME]",
  "tags": [
    {
      "key": "key1",
      "value": "value1"
    }
  ]
}

=== add a new tag, this should be a no-op; terraform does make an update request but since update request has no tags in it, it does nothing; direct skips request completely
>>> [CLI] bundle plan

>>> [CLI] bundle deploy
Uploading bundle files to /Workspace/Users/[USERNAME]/.bundle/deploy-models-basic-[UNIQUE_NAME]/default/files...
Deploying resources...
Updating deployment state...
Deployment complete!

>>> [CLI] model-registry get-model new-name-[UNIQUE_NAME]
{
  "name": "new-name-[UNIQUE_NAME]",
  "description": "new-description-[UNIQUE_NAME]",
  "tags": [
    {
      "key": "key1",
      "value": "value1"
    }
  ]
}

>>> [CLI] bundle destroy --auto-approve
The following resources will be deleted:
  delete model my_model

All files and directories at the following location will be deleted: /Workspace/Users/[USERNAME]/.bundle/deploy-models-basic-[UNIQUE_NAME]/default

Deleting files...
Destroy complete!
