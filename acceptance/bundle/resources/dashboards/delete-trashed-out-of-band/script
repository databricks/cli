export DASHBOARD_DISPLAY_NAME="test bundle-deploy-dashboard $UNIQUE_NAME)"

if [ -z "$CLOUD_ENV" ]; then
    export TEST_DEFAULT_WAREHOUSE_ID="warehouse-1234"
    echo "warehouse-1234:TEST_DEFAULT_WAREHOUSE_ID" >> ACC_REPLS
fi

envsubst < databricks.yml.tmpl > databricks.yml

# Deploy the dashboard
trace $CLI bundle deploy
DASHBOARD_ID=$($CLI bundle summary --output json | jq -r '.resources.dashboards.dashboard1.id')

# Capture the dashboard ID as a replacement.
echo "$DASHBOARD_ID:DASHBOARD_ID" >> ACC_REPLS

# Verify dashboard was deployed
trace $CLI lakeview get $DASHBOARD_ID | jq '{lifecycle_state, parent_path}'

# Trash the dashboard out of band (simulating external deletion)
# This should succeed
trace $CLI lakeview trash $DASHBOARD_ID

trace $CLI bundle plan

trace $CLI bundle debug plan > out.plan.$DATABRICKS_BUNDLE_ENGINE.json

# Run destroy - should succeed even though dashboard is already trashed
trace $CLI bundle destroy --auto-approve
