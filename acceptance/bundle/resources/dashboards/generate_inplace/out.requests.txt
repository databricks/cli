{
  "method": "GET",
  "path": "/api/2.0/preview/scim/v2/Me"
}
{
  "method": "POST",
  "path": "/api/2.0/workspace-files/import-file/Workspace/Users/[USERNAME]/.bundle/dashboard-replace-[UNIQUE_NAME]/default/state/deploy.lock",
  "body": {
    "ID": "[UUID]",
    "AcquisitionTime": "[TIMESTAMP]",
    "IsForced": false,
    "User": "[USERNAME]"
  }
}
{
  "method": "POST",
  "path": "/api/2.0/workspace/mkdirs",
  "body": {
    "path": "/Workspace/Users/[USERNAME]/.bundle/dashboard-replace-[UNIQUE_NAME]/default/state"
  }
}
{
  "method": "POST",
  "path": "/api/2.0/workspace-files/import-file/Workspace/Users/[USERNAME]/.bundle/dashboard-replace-[UNIQUE_NAME]/default/state/deploy.lock",
  "body": {
    "ID": "[UUID]",
    "AcquisitionTime": "[TIMESTAMP]",
    "IsForced": false,
    "User": "[USERNAME]"
  }
}
{
  "method": "GET",
  "path": "/api/2.0/workspace/get-status"
}
{
  "method": "GET",
  "path": "/api/2.0/workspace/export"
}
{
  "method": "GET",
  "path": "/api/2.0/workspace/get-status"
}
{
  "method": "GET",
  "path": "/api/2.0/workspace/get-status"
}
{
  "method": "POST",
  "path": "/api/2.0/workspace/delete",
  "body": {
    "path": "/Workspace/Users/[USERNAME]/.bundle/dashboard-replace-[UNIQUE_NAME]/default/artifacts/.internal",
    "recursive": true
  }
}
{
  "method": "POST",
  "path": "/api/2.0/workspace/mkdirs",
  "body": {
    "path": "/Workspace/Users/[USERNAME]/.bundle/dashboard-replace-[UNIQUE_NAME]/default/artifacts/.internal"
  }
}
{
  "method": "GET",
  "path": "/api/2.0/workspace/get-status"
}
{
  "method": "POST",
  "path": "/api/2.0/workspace/mkdirs",
  "body": {
    "path": "/Workspace/Users/[USERNAME]/.bundle/dashboard-replace-[UNIQUE_NAME]/default/files"
  }
}
{
  "method": "GET",
  "path": "/api/2.0/workspace/get-status"
}
{
  "method": "POST",
  "path": "/api/2.0/workspace-files/import-file/Workspace/Users/[USERNAME]/.bundle/dashboard-replace-[UNIQUE_NAME]/default/files/repls.json",
  "body": [
    {
      "Old": "/Users/shreyas\\.goenka/repos/cli3/acceptance/build/darwin_arm64/databricks_bundles-0\\.272\\.0-py3-none-any\\.whl",
      "New": "[DATABRICKS_BUNDLES_WHEEL]",
      "Order": 0,
      "Distinct": false
    },
    {
      "Old": "/Users/shreyas\\.goenka/repos/cli3/acceptance/build/darwin_arm64/databricks",
      "New": "[CLI]",
      "Order": 0,
      "Distinct": false
    },
    {
      "Old": "/Users/shreyas\\.goenka/repos/cli3/acceptance/build/darwin_arm64/pipelines",
      "New": "[PIPELINES]",
      "Order": 0,
      "Distinct": false
    },
    {
      "Old": "[TEST_DEFAULT_WAREHOUSE_ID]",
      "New": "[TEST_DEFAULT_WAREHOUSE_ID]",
      "Order": 0,
      "Distinct": false
    },
    {
      "Old": "/Users/shreyas\\.goenka/repos/cli3/acceptance/build/darwin_arm64/\\.terraformrc",
      "New": "[DATABRICKS_TF_CLI_CONFIG_FILE]",
      "Order": 0,
      "Distinct": false
    },
    {
      "Old": "/Users/shreyas\\.goenka/repos/cli3/acceptance/build/darwin_arm64/terraform",
      "New": "[TERRAFORM]",
      "Order": 0,
      "Distinct": false
    },
    {
      "Old": "/Users/shreyas\\.goenka/repos/cli3/acceptance/build/darwin_arm64",
      "New": "[BUILD_DIR]",
      "Order": 0,
      "Distinct": false
    },
    {
      "Old": "[TEST_INSTANCE_POOL_ID]",
      "New": "[TEST_INSTANCE_POOL_ID]",
      "Order": 0,
      "Distinct": false
    },
    {
      "Old": "0\\.0\\.0-dev(\\+[a-f0-9]{10,16})?",
      "New": "[DEV_VERSION]",
      "Order": 0,
      "Distinct": false
    },
    {
      "Old": "0\\.85\\.0",
      "New": "[SDK_VERSION]",
      "Order": 0,
      "Distinct": false
    },
    {
      "Old": "1\\.25\\.1",
      "New": "[GO_VERSION]",
      "Order": 0,
      "Distinct": false
    },
    {
      "Old": "/Users/shreyas\\.goenka/repos/cli3/acceptance",
      "New": "[TESTROOT]",
      "Order": 0,
      "Distinct": false
    },
    {
      "Old": "dbapi[0-9a-f]+",
      "New": "[DATABRICKS_TOKEN]",
      "Order": 0,
      "Distinct": false
    },
    {
      "Old": "i3\\.xlarge",
      "New": "[NODE_TYPE_ID]",
      "Order": 0,
      "Distinct": false
    },
    {
      "Old": "[UNIQUE_NAME]",
      "New": "[UNIQUE_NAME]",
      "Order": 0,
      "Distinct": false
    },
    {
      "Old": "[TEST_TMP_DIR]",
      "New": "[TEST_TMP_DIR]",
      "Order": 0,
      "Distinct": false
    },
    {
      "Old": "[TEST_TMP_DIR]",
      "New": "[TEST_TMP_DIR]",
      "Order": 0,
      "Distinct": false
    },
    {
      "Old": "[TEST_TMP_DIR]_PARENT",
      "New": "[TEST_TMP_DIR]_PARENT",
      "Order": 0,
      "Distinct": false
    },
    {
      "Old": "[TEST_TMP_DIR]_PARENT",
      "New": "[TEST_TMP_DIR]_PARENT",
      "Order": 0,
      "Distinct": false
    },
    {
      "Old": "[USERNAME]",
      "New": "[USERNAME]",
      "Order": 0,
      "Distinct": false
    },
    {
      "Old": "[USERNAME]",
      "New": "[USERNAME]",
      "Order": 0,
      "Distinct": false
    },
    {
      "Old": "[USERNAME]",
      "New": "[USERNAME]",
      "Order": 0,
      "Distinct": false
    },
    {
      "Old": "[USERNAME]",
      "New": "[USERNAME]",
      "Order": 0,
      "Distinct": false
    },
    {
      "Old": "[USERNAME]",
      "New": "[USERNAME]",
      "Order": 0,
      "Distinct": false
    },
    {
      "Old": "[USERGROUP]",
      "New": "[USERGROUP]",
      "Order": 0,
      "Distinct": false
    },
    {
      "Old": "[USERID]",
      "New": "[USERID]",
      "Order": 0,
      "Distinct": false
    },
    {
      "Old": "[USERROLE]",
      "New": "[USERROLE]",
      "Order": 0,
      "Distinct": false
    },
    {
      "Old": "https://127\\.0\\.0\\.1:64227",
      "New": "[DATABRICKS_URL]",
      "Order": 0,
      "Distinct": false
    },
    {
      "Old": "http://127\\.0\\.0\\.1:64227",
      "New": "[DATABRICKS_URL]",
      "Order": 0,
      "Distinct": false
    },
    {
      "Old": "127\\.0\\.0\\.1:64227",
      "New": "[DATABRICKS_HOST]",
      "Order": 0,
      "Distinct": false
    },
    {
      "Old": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
      "New": "[UUID]",
      "Order": 0,
      "Distinct": false
    },
    {
      "Old": "\\d{20,}",
      "New": "[NUMID]",
      "Order": 10,
      "Distinct": false
    },
    {
      "Old": "1[78]\\d{17}",
      "New": "[UNIX_TIME_NANOS]",
      "Order": 10,
      "Distinct": true
    },
    {
      "Old": "\\d{17,}",
      "New": "[NUMID]",
      "Order": 10,
      "Distinct": false
    },
    {
      "Old": "\\d{14,}",
      "New": "[NUMID]",
      "Order": 10,
      "Distinct": false
    },
    {
      "Old": "1[78]\\d{11}",
      "New": "[UNIX_TIME_MILLIS]",
      "Order": 10,
      "Distinct": true
    },
    {
      "Old": "\\d{11,}",
      "New": "[NUMID]",
      "Order": 10,
      "Distinct": false
    },
    {
      "Old": "1[78]\\d{8}",
      "New": "[UNIX_TIME_S]",
      "Order": 10,
      "Distinct": false
    },
    {
      "Old": "\\d{8,}",
      "New": "[NUMID]",
      "Order": 10,
      "Distinct": false
    },
    {
      "Old": "2\\d\\d\\d-\\d\\d-\\d\\d(T| )\\d\\d:\\d\\d:\\d\\d(\\.\\d+(Z|\\+\\d\\d:\\d\\d)?)?",
      "New": "[TIMESTAMP]",
      "Order": 10,
      "Distinct": false
    },
    {
      "Old": "[0-9a-f]{32}",
      "New": "[DASHBOARD_ID]",
      "Order": 0,
      "Distinct": false
    },
    {
      "Old": "\"[-0-9]{8,}\"",
      "New": "[ETAG]",
      "Order": 0,
      "Distinct": false
    },
    {
      "Old": "\"[0-9]{8,}\"",
      "New": "[ETAG]",
      "Order": 0,
      "Distinct": false
    }
  ]
}
{
  "method": "POST",
  "path": "/api/2.0/workspace-files/import-file/Workspace/Users/[USERNAME]/.bundle/dashboard-replace-[UNIQUE_NAME]/default/files/databricks.yml",
  "raw_body": "bundle:\n  name: dashboard-replace-[UNIQUE_NAME]\n\nresources:\n  dashboards:\n    already_exists:\n      file_path: ./dashboard.lvdash.json\n      display_name: Already Exists\n      warehouse_id: [TEST_DEFAULT_WAREHOUSE_ID]\n"
}
{
  "method": "POST",
  "path": "/api/2.0/workspace-files/import-file/Workspace/Users/[USERNAME]/.bundle/dashboard-replace-[UNIQUE_NAME]/default/files/output.txt",
  "raw_body": "\n\u003e\u003e\u003e [CLI] bundle deploy\nUploading bundle files to /Workspace/Users/[USERNAME]/.bundle/dashboard-replace-[UNIQUE_NAME]/default/files...\n"
}
{
  "method": "POST",
  "path": "/api/2.0/workspace-files/import-file/Workspace/Users/[USERNAME]/.bundle/dashboard-replace-[UNIQUE_NAME]/default/files/out.test.toml",
  "raw_body": "Local = false\nCloud = true\nRequiresWarehouse = true\n\n[EnvMatrix]\n  DATABRICKS_BUNDLE_ENGINE = [\"terraform\", \"direct-exp\"]\n"
}
{
  "method": "POST",
  "path": "/api/2.0/workspace-files/import-file/Workspace/Users/[USERNAME]/.bundle/dashboard-replace-[UNIQUE_NAME]/default/files/dashboard.lvdash.json",
  "body": {
    "uiSettings": {
      "theme": {
        "widgetHeaderAlignment": "ALIGNMENT_UNSPECIFIED"
      }
    }
  }
}
{
  "method": "POST",
  "path": "/api/2.0/workspace-files/import-file/Workspace/Users/[USERNAME]/.bundle/dashboard-replace-[UNIQUE_NAME]/default/files/test.toml",
  "raw_body": "Cloud = true\nLocal = false\n\n[EnvMatrix]\n  DATABRICKS_BUNDLE_ENGINE = [\"terraform\", \"direct-exp\"]\n"
}
{
  "method": "POST",
  "path": "/api/2.0/workspace-files/import-file/Workspace/Users/[USERNAME]/.bundle/dashboard-replace-[UNIQUE_NAME]/default/files/script",
  "raw_body": "errcode() {\n    # Temporarily disable 'set -e' to prevent the script from exiting on error\n    set +e\n    # Execute the provided command with all arguments\n    \"$@\"\n    local exit_code=$?\n    # Re-enable 'set -e' if it was previously set\n    set -e\n    if [ $exit_code -ne 0 ]; then\n        \u003e\u00262 printf \"\\nExit code: $exit_code\\n\"\n    fi\n}\n\nmusterr() {\n    # Temporarily disable 'set -e' to prevent the script from exiting on error\n    set +e\n    # Execute the provided command with all arguments\n    \"$@\"\n    local exit_code=$?\n    # Re-enable 'set -e'\n    set -e\n    if [ $exit_code -eq 0 ]; then\n        \u003e\u00262 printf \"\\nUnexpected success\\n\"\n        exit 1\n    fi\n    \u003e\u00262 printf \"\\nExit code (musterr): $exit_code\\n\"\n}\n\ntrace() {\n    \u003e\u00262 printf \"\\n\u003e\u003e\u003e %s\\n\" \"$*\"\n\n    if [[ \"$1\" == *\"=\"* ]]; then\n        # If the first argument contains '=', collect all env vars\n        local env_vars=()\n        while [[ \"$1\" == *\"=\"* ]]; do\n            env_vars+=(\"$1\")\n            shift\n        done\n        # Export environment variables in a subshell and execute the command\n        (\n            export \"${env_vars[@]}\"\n            \"$@\"\n        )\n    else\n        # Execute the command normally\n        \"$@\"\n    fi\n\n    return $?\n}\n\ngit-repo-init() {\n    git init -qb main\n    git config core.autocrlf false\n    git config user.name \"Tester\"\n    git config user.email \"tester@databricks.com\"\n    git config core.hooksPath no-hooks\n    git add databricks.yml\n    git commit -qm 'Add databricks.yml'\n}\n\ntitle() {\n    local label=\"$1\"\n    printf \"\\n=== %b\" \"$label\"\n}\n\nwithdir() {\n    local dir=\"$1\"\n    shift\n    local orig_dir=\"$(pwd)\"\n    cd \"$dir\" || return $?\n    \"$@\"\n    local exit_code=$?\n    cd \"$orig_dir\" || return $?\n    return $exit_code\n}\n\nuuid() {\n    python3 -c 'import uuid; print(uuid.uuid4())'\n}\n\nvenv_activate() {\n    if [[ \"$OSTYPE\" == \"msys\" || \"$OSTYPE\" == \"cygwin\" || \"$OSTYPE\" == \"win32\" ]]; then\n        source .venv/Scripts/activate\n    else\n        source .venv/bin/activate\n    fi\n}\n\nenvsubst() {\n    # We need to disable MSYS_NO_PATHCONV when running the python script.\n    # This is because the python interpreter is otherwise unable to find the python script\n    # when MSYS_NO_PATHCONV is enabled.\n    env -u MSYS_NO_PATHCONV envsubst.py\n}\n\nprint_telemetry_bool_values() {\n    jq -r 'select(.path? == \"/telemetry-ext\") | (.body.protoLogs // [])[] | fromjson | ( (.entry // .) | (.databricks_cli_log.bundle_deploy_event.experimental.bool_values // []) ) | map(\"\\(.key) \\(.value)\") | .[]' out.requests.txt | sort\n}\n\nsethome() {\n    local home=\"$1\"\n    mkdir -p \"$home\"\n\n    # For macOS and Linux, use HOME.\n    export HOME=\"$home\"\n\n    # For Windows, use USERPROFILE.\n    export USERPROFILE=\"$home\"\n}\n\n(\nenvsubst \u003c databricks.yml \u003e databricks.yml.subst\nmv databricks.yml.subst databricks.yml\n\n# Deploy bundle once to create the dashboard.\ntrace $CLI bundle deploy\n\ncleanup() {\n    trace $CLI bundle destroy --auto-approve\n}\ntrap cleanup EXIT\n\ndashboard_id=$($CLI bundle summary -o json | jq .resources.dashboards.already_exists.id -r)\n\ntitle \"Get current dashboard\\n\"\n$CLI lakeview get $dashboard_id | jq .serialized_dashboard\n\ntitle \"Update dashboard\\n\"\n$CLI lakeview update $dashboard_id --display-name \"Updated dashboard\" | jq .serialized_dashboard\n\n# This should error.\nerrcode trace $CLI bundle generate dashboard --resource already_exists\n\ntrace cat dashboard.lvdash.json\n\n# this should successfully update the dashboard.\ntrace $CLI bundle generate dashboard --resource already_exists --force\n\ntrace cat dashboard.lvdash.json\n)\n\nrm -fr .databricks .gitignore\n"
}
{
  "method": "POST",
  "path": "/api/2.0/workspace-files/import-file/Workspace/Users/[USERNAME]/.bundle/dashboard-replace-[UNIQUE_NAME]/default/files/out.requests.txt",
  "raw_body": "{\n  \"method\": \"GET\",\n  \"path\": \"/api/2.0/preview/scim/v2/Me\"\n}\n{\n  \"method\": \"POST\",\n  \"path\": \"/api/2.0/workspace-files/import-file/Workspace/Users/[USERNAME]/.bundle/dashboard-replace-[UNIQUE_NAME]/default/state/deploy.lock\",\n  \"body\": {\n    \"ID\": \"[UUID]\",\n    \"AcquisitionTime\": \"[TIMESTAMP]\",\n    \"IsForced\": false,\n    \"User\": \"[USERNAME]\"\n  }\n}\n{\n  \"method\": \"POST\",\n  \"path\": \"/api/2.0/workspace/mkdirs\",\n  \"body\": {\n    \"path\": \"/Workspace/Users/[USERNAME]/.bundle/dashboard-replace-[UNIQUE_NAME]/default/state\"\n  }\n}\n{\n  \"method\": \"POST\",\n  \"path\": \"/api/2.0/workspace-files/import-file/Workspace/Users/[USERNAME]/.bundle/dashboard-replace-[UNIQUE_NAME]/default/state/deploy.lock\",\n  \"body\": {\n    \"ID\": \"[UUID]\",\n    \"AcquisitionTime\": \"[TIMESTAMP]\",\n    \"IsForced\": false,\n    \"User\": \"[USERNAME]\"\n  }\n}\n{\n  \"method\": \"GET\",\n  \"path\": \"/api/2.0/workspace/get-status\"\n}\n{\n  \"method\": \"GET\",\n  \"path\": \"/api/2.0/workspace/export\"\n}\n{\n  \"method\": \"GET\",\n  \"path\": \"/api/2.0/workspace/get-status\"\n}\n{\n  \"method\": \"GET\",\n  \"path\": \"/api/2.0/workspace/get-status\"\n}\n{\n  \"method\": \"POST\",\n  \"path\": \"/api/2.0/workspace/delete\",\n  \"body\": {\n    \"path\": \"/Workspace/Users/[USERNAME]/.bundle/dashboard-replace-[UNIQUE_NAME]/default/artifacts/.internal\",\n    \"recursive\": true\n  }\n}\n{\n  \"method\": \"POST\",\n  \"path\": \"/api/2.0/workspace/mkdirs\",\n  \"body\": {\n    \"path\": \"/Workspace/Users/[USERNAME]/.bundle/dashboard-replace-[UNIQUE_NAME]/default/artifacts/.internal\"\n  }\n}\n{\n  \"method\": \"GET\",\n  \"path\": \"/api/2.0/workspace/get-status\"\n}\n{\n  \"method\": \"POST\",\n  \"path\": \"/api/2.0/workspace/mkdirs\",\n  \"body\": {\n    \"path\": \"/Workspace/Users/[USERNAME]/.bundle/dashboard-replace-[UNIQUE_NAME]/default/files\"\n  }\n}\n{\n  \"method\": \"GET\",\n  \"path\": \"/api/2.0/workspace/get-status\"\n}\n"
}
{
  "method": "POST",
  "path": "/api/2.0/workspace-files/import-file/Workspace/Users/[USERNAME]/.bundle/dashboard-replace-[UNIQUE_NAME]/default/state/deployment.json",
  "body": {
    "version": 1,
    "seq": 1,
    "cli_version": "[DEV_VERSION]",
    "timestamp": "[TIMESTAMP]",
    "files": [
      {
        "local_path": "out.requests.txt",
        "is_notebook": false
      },
      {
        "local_path": "out.test.toml",
        "is_notebook": false
      },
      {
        "local_path": "output.txt",
        "is_notebook": false
      },
      {
        "local_path": "repls.json",
        "is_notebook": false
      },
      {
        "local_path": "script",
        "is_notebook": false
      },
      {
        "local_path": "test.toml",
        "is_notebook": false
      },
      {
        "local_path": "dashboard.lvdash.json",
        "is_notebook": false
      },
      {
        "local_path": "databricks.yml",
        "is_notebook": false
      }
    ],
    "id": "[UUID]"
  }
}
{
  "method": "POST",
  "path": "/api/2.0/lakeview/dashboards",
  "body": {
    "display_name": "Already Exists",
    "parent_path": "/Workspace/Users/[USERNAME]/.bundle/dashboard-replace-[UNIQUE_NAME]/default/resources",
    "serialized_dashboard": "{\n  \"uiSettings\": {\n    \"theme\": {\n      \"widgetHeaderAlignment\": \"ALIGNMENT_UNSPECIFIED\"\n    }\n  }\n}\n",
    "warehouse_id": "[TEST_DEFAULT_WAREHOUSE_ID]"
  }
}
{
  "method": "POST",
  "path": "/api/2.0/workspace/mkdirs",
  "body": {
    "path": "/Workspace/Users/[USERNAME]/.bundle/dashboard-replace-[UNIQUE_NAME]/default/resources"
  }
}
{
  "method": "POST",
  "path": "/api/2.0/lakeview/dashboards",
  "body": {
    "display_name": "Already Exists",
    "parent_path": "/Workspace/Users/[USERNAME]/.bundle/dashboard-replace-[UNIQUE_NAME]/default/resources",
    "serialized_dashboard": "{\n  \"uiSettings\": {\n    \"theme\": {\n      \"widgetHeaderAlignment\": \"ALIGNMENT_UNSPECIFIED\"\n    }\n  }\n}\n",
    "warehouse_id": "[TEST_DEFAULT_WAREHOUSE_ID]"
  }
}
{
  "method": "POST",
  "path": "/api/2.0/lakeview/dashboards/[DASHBOARD_ID]/published",
  "body": {
    "embed_credentials": false,
    "warehouse_id": "[TEST_DEFAULT_WAREHOUSE_ID]"
  }
}
{
  "method": "GET",
  "path": "/api/2.0/lakeview/dashboards/[DASHBOARD_ID]"
}
{
  "method": "POST",
  "path": "/api/2.0/workspace-files/import-file/Workspace/Users/[USERNAME]/.bundle/dashboard-replace-[UNIQUE_NAME]/default/state/terraform.tfstate",
  "body": {
    "version": 4,
    "terraform_version": "1.5.5",
    "serial": 1,
    "lineage": "[UUID]",
    "outputs": {},
    "resources": [
      {
        "mode": "managed",
        "type": "databricks_dashboard",
        "name": "already_exists",
        "provider": "provider[\"registry.terraform.io/databricks/databricks\"]",
        "instances": [
          {
            "schema_version": 0,
            "attributes": {
              "create_time": "[TIMESTAMP]",
              "dashboard_change_detected": false,
              "dashboard_id": "[DASHBOARD_ID]",
              "display_name": "Already Exists",
              "embed_credentials": false,
              "etag": [ETAG],
              "file_path": null,
              "id": "[DASHBOARD_ID]",
              "lifecycle_state": "ACTIVE",
              "md5": "[DASHBOARD_ID]",
              "parent_path": "/Users/[USERNAME]/.bundle/dashboard-replace-[UNIQUE_NAME]/default/resources",
              "path": "/Users/[USERNAME]/.bundle/dashboard-replace-[UNIQUE_NAME]/default/resources/Already Exists.lvdash.json",
              "serialized_dashboard": "{\n  \"uiSettings\": {\n    \"theme\": {\n      \"widgetHeaderAlignment\": \"ALIGNMENT_UNSPECIFIED\"\n    }\n  }\n}\n",
              "update_time": "[TIMESTAMP]",
              "warehouse_id": "[TEST_DEFAULT_WAREHOUSE_ID]"
            },
            "sensitive_attributes": [],
            "private": "bnVsbA=="
          }
        ]
      }
    ],
    "check_results": null
  }
}
{
  "method": "POST",
  "path": "/api/2.0/workspace-files/import-file/Workspace/Users/[USERNAME]/.bundle/dashboard-replace-[UNIQUE_NAME]/default/state/metadata.json",
  "body": {
    "version": 1,
    "config": {
      "bundle": {
        "git": {
          "bundle_root_path": "."
        }
      },
      "workspace": {
        "file_path": "/Workspace/Users/[USERNAME]/.bundle/dashboard-replace-[UNIQUE_NAME]/default/files"
      },
      "resources": {},
      "presets": {
        "source_linked_deployment": false
      }
    },
    "extra": {}
  }
}
{
  "method": "GET",
  "path": "/api/2.0/workspace/get-status"
}
{
  "method": "GET",
  "path": "/api/2.0/workspace/get-status"
}
{
  "method": "GET",
  "path": "/api/2.0/workspace/export"
}
{
  "method": "POST",
  "path": "/api/2.0/workspace/delete",
  "body": {
    "path": "/Workspace/Users/[USERNAME]/.bundle/dashboard-replace-[UNIQUE_NAME]/default/state/deploy.lock"
  }
}
{
  "method": "POST",
  "path": "/telemetry-ext",
  "body": {
    "uploadTime": [UNIX_TIME_MILLIS],
    "items": [],
    "protoLogs": [
      "{\"frontend_log_event_id\":\"[UUID]\",\"entry\":{\"databricks_cli_log\":{\"execution_context\":{\"cmd_exec_id\":\"[UUID]\",\"version\":\"[DEV_VERSION]\",\"command\":\"bundle_deploy\",\"operating_system\":\"darwin\",\"execution_time_ms\":13129,\"exit_code\":0},\"bundle_deploy_event\":{\"bundle_uuid\":\"[UUID]\",\"deployment_id\":\"[UUID]\",\"resource_count\":1,\"resource_job_count\":0,\"resource_pipeline_count\":0,\"resource_model_count\":0,\"resource_experiment_count\":0,\"resource_model_serving_endpoint_count\":0,\"resource_registered_model_count\":0,\"resource_quality_monitor_count\":0,\"resource_schema_count\":0,\"resource_volume_count\":0,\"resource_cluster_count\":0,\"resource_dashboard_count\":1,\"resource_app_count\":0,\"resource_dashboard_ids\":[\"[DASHBOARD_ID]\"],\"experimental\":{\"configuration_file_count\":1,\"variable_count\":0,\"complex_variable_count\":0,\"lookup_variable_count\":0,\"target_count\":1,\"bool_values\":[{\"key\":\"experimental.use_legacy_run_as\",\"value\":false},{\"key\":\"run_as_set\",\"value\":false},{\"key\":\"presets_name_prefix_is_set\",\"value\":false},{\"key\":\"python_wheel_wrapper_is_set\",\"value\":false},{\"key\":\"skip_artifact_cleanup\",\"value\":false},{\"key\":\"has_serverless_compute\",\"value\":false},{\"key\":\"has_classic_job_compute\",\"value\":false},{\"key\":\"has_classic_interactive_compute\",\"value\":false}],\"bundle_mode\":\"TYPE_UNSPECIFIED\",\"workspace_artifact_path_type\":\"WORKSPACE_FILE_SYSTEM\",\"bundle_mutator_execution_time_ms\":[{\"key\":\"terraform.(apply)\",\"value\":4395},{\"key\":\"phases.Initialize\",\"value\":1882},{\"key\":\"mutator.(populateCurrentUser)\",\"value\":1842},{\"key\":\"lock.(acquire)\",\"value\":1715},{\"key\":\"files.(upload)\",\"value\":1214},{\"key\":\"artifacts.(cleanUp)\",\"value\":539},{\"key\":\"statemgmt.(statePush)\",\"value\":513},{\"key\":\"terraform.(plan)\",\"value\":329},{\"key\":\"metadata.(upload)\",\"value\":326},{\"key\":\"deploy.(statePush)\",\"value\":323},{\"key\":\"statemgmt.(statePull)\",\"value\":264},{\"key\":\"deploy.(statePull)\",\"value\":260},{\"key\":\"statemgmt.(load)\",\"value\":109},{\"key\":\"terraform.(initialize)\",\"value\":33},{\"key\":\"resourcemutator.(processStaticResources)\",\"value\":3},{\"key\":\"terraform.(write)\",\"value\":2},{\"key\":\"libraries.(switchToPatchedWheels)\",\"value\":1},{\"key\":\"deploy.(stateUpdate)\",\"value\":1},{\"key\":\"phases.Build\"},{\"key\":\"validate.FastValidate\"}]}}}}}"
    ]
  }
}
{
  "method": "GET",
  "path": "/api/2.0/preview/scim/v2/Me"
}
{
  "method": "GET",
  "path": "/api/2.0/preview/scim/v2/Me"
}
{
  "method": "GET",
  "path": "/api/2.0/lakeview/dashboards/[DASHBOARD_ID]"
}
{
  "method": "PATCH",
  "path": "/api/2.0/lakeview/dashboards/[DASHBOARD_ID]",
  "body": {
    "display_name": "Updated dashboard"
  }
}
{
  "method": "GET",
  "path": "/api/2.0/preview/scim/v2/Me"
}
{
  "method": "GET",
  "path": "/api/2.0/workspace/get-status"
}
{
  "method": "GET",
  "path": "/api/2.0/workspace-files/Workspace/Users/[USERNAME]/.bundle/dashboard-replace-[UNIQUE_NAME]/default/state/terraform.tfstate"
}
{
  "method": "GET",
  "path": "/api/2.0/lakeview/dashboards/[DASHBOARD_ID]"
}
{
  "method": "GET",
  "path": "/api/2.0/preview/scim/v2/Me"
}
{
  "method": "GET",
  "path": "/api/2.0/workspace/get-status"
}
{
  "method": "GET",
  "path": "/api/2.0/workspace-files/Workspace/Users/[USERNAME]/.bundle/dashboard-replace-[UNIQUE_NAME]/default/state/terraform.tfstate"
}
{
  "method": "GET",
  "path": "/api/2.0/lakeview/dashboards/[DASHBOARD_ID]"
}
{
  "method": "GET",
  "path": "/api/2.0/preview/scim/v2/Me"
}
{
  "method": "GET",
  "path": "/api/2.0/workspace/get-status"
}
{
  "method": "POST",
  "path": "/api/2.0/workspace-files/import-file/Workspace/Users/[USERNAME]/.bundle/dashboard-replace-[UNIQUE_NAME]/default/state/deploy.lock",
  "body": {
    "ID": "[UUID]",
    "AcquisitionTime": "[TIMESTAMP]",
    "IsForced": false,
    "User": "[USERNAME]"
  }
}
{
  "method": "GET",
  "path": "/api/2.0/workspace/get-status"
}
{
  "method": "GET",
  "path": "/api/2.0/workspace/export"
}
{
  "method": "GET",
  "path": "/api/2.0/workspace/get-status"
}
{
  "method": "GET",
  "path": "/api/2.0/workspace-files/Workspace/Users/[USERNAME]/.bundle/dashboard-replace-[UNIQUE_NAME]/default/state/terraform.tfstate"
}
{
  "method": "GET",
  "path": "/api/2.0/lakeview/dashboards/[DASHBOARD_ID]"
}
{
  "method": "DELETE",
  "path": "/api/2.0/lakeview/dashboards/[DASHBOARD_ID]"
}
{
  "method": "POST",
  "path": "/api/2.0/workspace/delete",
  "body": {
    "path": "/Workspace/Users/[USERNAME]/.bundle/dashboard-replace-[UNIQUE_NAME]/default",
    "recursive": true
  }
}
{
  "method": "GET",
  "path": "/api/2.0/workspace/get-status"
}
